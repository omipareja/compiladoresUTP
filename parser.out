Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> operaction_declaration
Rule 6     declaration -> fun_declaration
Rule 7     declaration -> header_declaration
Rule 8     declaration -> class_declaration
Rule 9     class_declaration -> CLASS IDENTIFICADOR bloque_declaration
Rule 10    bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER
Rule 11    bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration
Rule 12    bloque_declaration_2 -> fun_declaration bloque_declaration_2
Rule 13    bloque_declaration_2 -> fun_declaration
Rule 14    header_declaration -> INICIO program FIN
Rule 15    var_declaration -> type_specifier var_declaration2 PUNTOYCOMA
Rule 16    var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
Rule 17    var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2
Rule 18    var_declaration2 -> DOLAR IDENTIFICADOR
Rule 19    var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
Rule 20    var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO
Rule 21    var_declaration2 -> AMPERSAND IDENTIFICADOR
Rule 22    var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL
Rule 23    var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO
Rule 24    type_specifier -> PUBLIC
Rule 25    type_specifier -> PRIVATE
Rule 26    operaction_declaration -> statement
Rule 27    fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
Rule 28    fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
Rule 29    type_function -> STATIC
Rule 30    type_function -> empty
Rule 31    params -> param_list
Rule 32    param_list -> param_list COMA param
Rule 33    param_list -> param
Rule 34    param_list -> empty
Rule 35    param -> DOLAR IDENTIFICADOR
Rule 36    compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER
Rule 37    compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
Rule 38    local_declarations -> local_declarations var_declaration
Rule 39    local_declarations -> empty
Rule 40    statement_list -> statement_list statement
Rule 41    statement_list -> empty
Rule 42    statement -> expression_stmt
Rule 43    statement -> imprimir_pantalla
Rule 44    statement -> compount_stmt
Rule 45    statement -> selection_stmt
Rule 46    statement -> iteration_stmt
Rule 47    statement -> return_stmt
Rule 48    statement -> continue_stmt
Rule 49    statement -> object_stmt
Rule 50    expression_stmt -> expression PUNTOYCOMA
Rule 51    expression_stmt -> PUNTOYCOMA
Rule 52    selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement
Rule 53    selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
Rule 54    selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
Rule 55    selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
Rule 56    selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
Rule 57    iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement
Rule 58    iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
Rule 59    iteration_stmt -> DO statement
Rule 60    return_stmt -> RETURN PUNTOYCOMA
Rule 61    return_stmt -> RETURN expression PUNTOYCOMA
Rule 62    continue_stmt -> CONTINUE PUNTOYCOMA
Rule 63    object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
Rule 64    argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA
Rule 65    argumento_2 -> DOLAR IDENTIFICADOR COMA argumento_2
Rule 66    argumento_2 -> COMILLA IDENTIFICADOR COMILLA COMA argumento_2
Rule 67    argumento_2 -> COMILLA IDENTIFICADOR COMILLA
Rule 68    argumento_2 -> DOLAR IDENTIFICADOR
Rule 69    argumento_2 -> NUMERO argumento_2
Rule 70    argumento_2 -> NUMERO
Rule 71    imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA
Rule 72    imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
Rule 73    imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
Rule 74    CADENA -> IDENTIFICADOR CADENA
Rule 75    CADENA -> NUMERO CADENA
Rule 76    CADENA -> NUMERO
Rule 77    CADENA -> IDENTIFICADOR
Rule 78    expression -> var_declaration2 IGUAL expression
Rule 79    expression -> simple_expression
Rule 80    expression -> var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
Rule 81    simple_expression -> additive_expression relop additive_expression
Rule 82    simple_expression -> additive_expression relop additive_expression relop additive_expression
Rule 83    simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression
Rule 84    simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
Rule 85    simple_expression -> additive_expression
Rule 86    relop -> MENORQ
Rule 87    relop -> MAYORQ
Rule 88    relop -> DIFERENTE
Rule 89    relop -> LOGNEGACION
Rule 90    relop -> IQUALIQUAL
Rule 91    relop -> LOGOR
Rule 92    relop -> LOGXOR
Rule 93    relop -> LOGAND
Rule 94    relop -> LOGY
Rule 95    additive_expression -> additive_expression addop term
Rule 96    additive_expression -> term
Rule 97    additive_expression -> term MINUSMINUS
Rule 98    additive_expression -> term PLUSPLUS
Rule 99    addop -> PLUS
Rule 100   addop -> MINUS
Rule 101   term -> term mulop factor
Rule 102   term -> factor
Rule 103   mulop -> MULTI
Rule 104   mulop -> DIVIDE
Rule 105   factor -> PARENIZQUIERDA expression PARENDERECHA
Rule 106   factor -> var_declaration2
Rule 107   factor -> call
Rule 108   factor -> NUMERO
Rule 109   call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA
Rule 110   args -> args_list
Rule 111   args -> empty
Rule 112   args_list -> args_list COMA expression
Rule 113   args_list -> expression
Rule 114   empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 21 28
BREAK                : 55 56
CASE                 : 55
CLASS                : 9 11
COMA                 : 17 19 32 65 66 112
COMILLA              : 66 66 67 67 71 71 72 72 73 73 73 73
CONST                : 23
CONTINUE             : 62
CORCHDER             : 16
CORCHIZQ             : 16
DEFAULT              : 56
DIFERENTE            : 88
DIVIDE               : 104
DO                   : 59
DOLAR                : 16 17 18 19 20 22 35 63 65 68 109
DOSPUNTOS            : 55 56
ELSE                 : 53
EXTENDS              : 11
FIN                  : 14
FOR                  : 58
FUNCTION             : 27 28
IDENTIFICADOR        : 9 11 11 16 17 18 19 20 21 22 23 27 28 35 63 63 65 66 67 68 74 77 109
IF                   : 52 53
IGUAL                : 19 20 22 23 63 78 80
INICIO               : 14
IQUALIQUAL           : 90
LLAVEDER             : 10 36 37
LLAVEIZQ             : 10 36 37
LOGAND               : 93
LOGNEGACION          : 89
LOGOR                : 91
LOGXOR               : 92
LOGY                 : 94
MAYORQ               : 87
MENORQ               : 86
MINUS                : 100
MINUSMINUS           : 97
MULTI                : 103
NEW                  : 63
NULL                 : 22
NUMERO               : 19 20 23 55 69 70 75 76 108
PARENDERECHA         : 27 28 37 52 53 54 57 58 64 105 109
PARENIZQUIERDA       : 27 28 37 52 53 54 57 58 64 105 109
PLUS                 : 99
PLUSPLUS             : 98
PRINT                : 71 72 73
PRIVATE              : 25
PUBLIC               : 24
PUNTO                : 72 73 73
PUNTOYCOMA           : 15 16 37 50 51 55 56 58 58 60 61 62 64 71 72 73 80
RETURN               : 60 61
STATIC               : 29
SWITCH               : 54
WHILE                : 37 57
error                : 

Nonterminals, with rules where they appear

CADENA               : 71 72 73 73 74 75
additive_expression  : 58 81 81 82 82 82 83 83 83 83 84 84 84 84 84 85 95
addop                : 95
args                 : 109
args_list            : 110 112
argumento            : 63
argumento_2          : 64 65 66 69
bloque_declaration   : 9 11
bloque_declaration_2 : 10 12
call                 : 107
class_declaration    : 8
compount_stmt        : 27 28 44
continue_stmt        : 48
declaration          : 2 3
declaration_list     : 1 2
empty                : 30 34 39 41 111
expression           : 37 50 52 53 57 58 61 72 73 78 105 112 113
expression_stmt      : 42
factor               : 101 102
fun_declaration      : 6 12 13
header_declaration   : 7
imprimir_pantalla    : 43
iteration_stmt       : 46
local_declarations   : 36 37 38
mulop                : 101
object_stmt          : 49
operaction_declaration : 5
param                : 32 33
param_list           : 31 32
params               : 27 28
program              : 14 0
relop                : 81 82 82 83 83 83 84 84 84 84
return_stmt          : 47
selection_stmt       : 45
simple_expression    : 79
statement            : 26 40 52 53 53 54 55 56 57 58 59
statement_list       : 36 37 40
term                 : 95 96 97 98 101
type_function        : 27 28
type_specifier       : 15 16 27 28
var_declaration      : 4 38
var_declaration2     : 15 17 19 54 58 78 80 80 106

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . operaction_declaration
    (6) declaration -> . fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (15) var_declaration -> . type_specifier var_declaration2 PUNTOYCOMA
    (16) var_declaration -> . type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
    (26) operaction_declaration -> . statement
    (27) fun_declaration -> . type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> . type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (14) header_declaration -> . INICIO program FIN
    (9) class_declaration -> . CLASS IDENTIFICADOR bloque_declaration
    (24) type_specifier -> . PUBLIC
    (25) type_specifier -> . PRIVATE
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    INICIO          shift and go to state 17
    CLASS           shift and go to state 18
    PUBLIC          shift and go to state 19
    PRIVATE         shift and go to state 20
    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    operaction_declaration         shift and go to state 5
    fun_declaration                shift and go to state 6
    header_declaration             shift and go to state 7
    class_declaration              shift and go to state 8
    type_specifier                 shift and go to state 9
    var_declaration2               shift and go to state 10
    statement                      shift and go to state 13
    compount_stmt                  shift and go to state 15
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    expression                     shift and go to state 28
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . operaction_declaration
    (6) declaration -> . fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (15) var_declaration -> . type_specifier var_declaration2 PUNTOYCOMA
    (16) var_declaration -> . type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
    (26) operaction_declaration -> . statement
    (27) fun_declaration -> . type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> . type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (14) header_declaration -> . INICIO program FIN
    (9) class_declaration -> . CLASS IDENTIFICADOR bloque_declaration
    (24) type_specifier -> . PUBLIC
    (25) type_specifier -> . PRIVATE
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    $end            reduce using rule 1 (program -> declaration_list .)
    FIN             reduce using rule 1 (program -> declaration_list .)
    INICIO          shift and go to state 17
    CLASS           shift and go to state 18
    PUBLIC          shift and go to state 19
    PRIVATE         shift and go to state 20
    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    declaration                    shift and go to state 48
    var_declaration                shift and go to state 4
    operaction_declaration         shift and go to state 5
    fun_declaration                shift and go to state 6
    header_declaration             shift and go to state 7
    class_declaration              shift and go to state 8
    type_specifier                 shift and go to state 9
    var_declaration2               shift and go to state 10
    statement                      shift and go to state 13
    compount_stmt                  shift and go to state 15
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    expression                     shift and go to state 28
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 3

    (3) declaration_list -> declaration .

    INICIO          reduce using rule 3 (declaration_list -> declaration .)
    CLASS           reduce using rule 3 (declaration_list -> declaration .)
    PUBLIC          reduce using rule 3 (declaration_list -> declaration .)
    PRIVATE         reduce using rule 3 (declaration_list -> declaration .)
    PUNTOYCOMA      reduce using rule 3 (declaration_list -> declaration .)
    PRINT           reduce using rule 3 (declaration_list -> declaration .)
    LLAVEIZQ        reduce using rule 3 (declaration_list -> declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration .)
    SWITCH          reduce using rule 3 (declaration_list -> declaration .)
    CASE            reduce using rule 3 (declaration_list -> declaration .)
    DEFAULT         reduce using rule 3 (declaration_list -> declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration .)
    DO              reduce using rule 3 (declaration_list -> declaration .)
    RETURN          reduce using rule 3 (declaration_list -> declaration .)
    CONTINUE        reduce using rule 3 (declaration_list -> declaration .)
    NEW             reduce using rule 3 (declaration_list -> declaration .)
    DOLAR           reduce using rule 3 (declaration_list -> declaration .)
    AMPERSAND       reduce using rule 3 (declaration_list -> declaration .)
    CONST           reduce using rule 3 (declaration_list -> declaration .)
    PARENIZQUIERDA  reduce using rule 3 (declaration_list -> declaration .)
    NUMERO          reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)
    FIN             reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> var_declaration .

    INICIO          reduce using rule 4 (declaration -> var_declaration .)
    CLASS           reduce using rule 4 (declaration -> var_declaration .)
    PUBLIC          reduce using rule 4 (declaration -> var_declaration .)
    PRIVATE         reduce using rule 4 (declaration -> var_declaration .)
    PUNTOYCOMA      reduce using rule 4 (declaration -> var_declaration .)
    PRINT           reduce using rule 4 (declaration -> var_declaration .)
    LLAVEIZQ        reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    DO              reduce using rule 4 (declaration -> var_declaration .)
    RETURN          reduce using rule 4 (declaration -> var_declaration .)
    CONTINUE        reduce using rule 4 (declaration -> var_declaration .)
    NEW             reduce using rule 4 (declaration -> var_declaration .)
    DOLAR           reduce using rule 4 (declaration -> var_declaration .)
    AMPERSAND       reduce using rule 4 (declaration -> var_declaration .)
    CONST           reduce using rule 4 (declaration -> var_declaration .)
    PARENIZQUIERDA  reduce using rule 4 (declaration -> var_declaration .)
    NUMERO          reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)
    FIN             reduce using rule 4 (declaration -> var_declaration .)


state 5

    (5) declaration -> operaction_declaration .

    INICIO          reduce using rule 5 (declaration -> operaction_declaration .)
    CLASS           reduce using rule 5 (declaration -> operaction_declaration .)
    PUBLIC          reduce using rule 5 (declaration -> operaction_declaration .)
    PRIVATE         reduce using rule 5 (declaration -> operaction_declaration .)
    PUNTOYCOMA      reduce using rule 5 (declaration -> operaction_declaration .)
    PRINT           reduce using rule 5 (declaration -> operaction_declaration .)
    LLAVEIZQ        reduce using rule 5 (declaration -> operaction_declaration .)
    IF              reduce using rule 5 (declaration -> operaction_declaration .)
    SWITCH          reduce using rule 5 (declaration -> operaction_declaration .)
    CASE            reduce using rule 5 (declaration -> operaction_declaration .)
    DEFAULT         reduce using rule 5 (declaration -> operaction_declaration .)
    WHILE           reduce using rule 5 (declaration -> operaction_declaration .)
    FOR             reduce using rule 5 (declaration -> operaction_declaration .)
    DO              reduce using rule 5 (declaration -> operaction_declaration .)
    RETURN          reduce using rule 5 (declaration -> operaction_declaration .)
    CONTINUE        reduce using rule 5 (declaration -> operaction_declaration .)
    NEW             reduce using rule 5 (declaration -> operaction_declaration .)
    DOLAR           reduce using rule 5 (declaration -> operaction_declaration .)
    AMPERSAND       reduce using rule 5 (declaration -> operaction_declaration .)
    CONST           reduce using rule 5 (declaration -> operaction_declaration .)
    PARENIZQUIERDA  reduce using rule 5 (declaration -> operaction_declaration .)
    NUMERO          reduce using rule 5 (declaration -> operaction_declaration .)
    $end            reduce using rule 5 (declaration -> operaction_declaration .)
    FIN             reduce using rule 5 (declaration -> operaction_declaration .)


state 6

    (6) declaration -> fun_declaration .

    INICIO          reduce using rule 6 (declaration -> fun_declaration .)
    CLASS           reduce using rule 6 (declaration -> fun_declaration .)
    PUBLIC          reduce using rule 6 (declaration -> fun_declaration .)
    PRIVATE         reduce using rule 6 (declaration -> fun_declaration .)
    PUNTOYCOMA      reduce using rule 6 (declaration -> fun_declaration .)
    PRINT           reduce using rule 6 (declaration -> fun_declaration .)
    LLAVEIZQ        reduce using rule 6 (declaration -> fun_declaration .)
    IF              reduce using rule 6 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 6 (declaration -> fun_declaration .)
    CASE            reduce using rule 6 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 6 (declaration -> fun_declaration .)
    WHILE           reduce using rule 6 (declaration -> fun_declaration .)
    FOR             reduce using rule 6 (declaration -> fun_declaration .)
    DO              reduce using rule 6 (declaration -> fun_declaration .)
    RETURN          reduce using rule 6 (declaration -> fun_declaration .)
    CONTINUE        reduce using rule 6 (declaration -> fun_declaration .)
    NEW             reduce using rule 6 (declaration -> fun_declaration .)
    DOLAR           reduce using rule 6 (declaration -> fun_declaration .)
    AMPERSAND       reduce using rule 6 (declaration -> fun_declaration .)
    CONST           reduce using rule 6 (declaration -> fun_declaration .)
    PARENIZQUIERDA  reduce using rule 6 (declaration -> fun_declaration .)
    NUMERO          reduce using rule 6 (declaration -> fun_declaration .)
    $end            reduce using rule 6 (declaration -> fun_declaration .)
    FIN             reduce using rule 6 (declaration -> fun_declaration .)


state 7

    (7) declaration -> header_declaration .

    INICIO          reduce using rule 7 (declaration -> header_declaration .)
    CLASS           reduce using rule 7 (declaration -> header_declaration .)
    PUBLIC          reduce using rule 7 (declaration -> header_declaration .)
    PRIVATE         reduce using rule 7 (declaration -> header_declaration .)
    PUNTOYCOMA      reduce using rule 7 (declaration -> header_declaration .)
    PRINT           reduce using rule 7 (declaration -> header_declaration .)
    LLAVEIZQ        reduce using rule 7 (declaration -> header_declaration .)
    IF              reduce using rule 7 (declaration -> header_declaration .)
    SWITCH          reduce using rule 7 (declaration -> header_declaration .)
    CASE            reduce using rule 7 (declaration -> header_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> header_declaration .)
    WHILE           reduce using rule 7 (declaration -> header_declaration .)
    FOR             reduce using rule 7 (declaration -> header_declaration .)
    DO              reduce using rule 7 (declaration -> header_declaration .)
    RETURN          reduce using rule 7 (declaration -> header_declaration .)
    CONTINUE        reduce using rule 7 (declaration -> header_declaration .)
    NEW             reduce using rule 7 (declaration -> header_declaration .)
    DOLAR           reduce using rule 7 (declaration -> header_declaration .)
    AMPERSAND       reduce using rule 7 (declaration -> header_declaration .)
    CONST           reduce using rule 7 (declaration -> header_declaration .)
    PARENIZQUIERDA  reduce using rule 7 (declaration -> header_declaration .)
    NUMERO          reduce using rule 7 (declaration -> header_declaration .)
    $end            reduce using rule 7 (declaration -> header_declaration .)
    FIN             reduce using rule 7 (declaration -> header_declaration .)


state 8

    (8) declaration -> class_declaration .

    INICIO          reduce using rule 8 (declaration -> class_declaration .)
    CLASS           reduce using rule 8 (declaration -> class_declaration .)
    PUBLIC          reduce using rule 8 (declaration -> class_declaration .)
    PRIVATE         reduce using rule 8 (declaration -> class_declaration .)
    PUNTOYCOMA      reduce using rule 8 (declaration -> class_declaration .)
    PRINT           reduce using rule 8 (declaration -> class_declaration .)
    LLAVEIZQ        reduce using rule 8 (declaration -> class_declaration .)
    IF              reduce using rule 8 (declaration -> class_declaration .)
    SWITCH          reduce using rule 8 (declaration -> class_declaration .)
    CASE            reduce using rule 8 (declaration -> class_declaration .)
    DEFAULT         reduce using rule 8 (declaration -> class_declaration .)
    WHILE           reduce using rule 8 (declaration -> class_declaration .)
    FOR             reduce using rule 8 (declaration -> class_declaration .)
    DO              reduce using rule 8 (declaration -> class_declaration .)
    RETURN          reduce using rule 8 (declaration -> class_declaration .)
    CONTINUE        reduce using rule 8 (declaration -> class_declaration .)
    NEW             reduce using rule 8 (declaration -> class_declaration .)
    DOLAR           reduce using rule 8 (declaration -> class_declaration .)
    AMPERSAND       reduce using rule 8 (declaration -> class_declaration .)
    CONST           reduce using rule 8 (declaration -> class_declaration .)
    PARENIZQUIERDA  reduce using rule 8 (declaration -> class_declaration .)
    NUMERO          reduce using rule 8 (declaration -> class_declaration .)
    $end            reduce using rule 8 (declaration -> class_declaration .)
    FIN             reduce using rule 8 (declaration -> class_declaration .)


state 9

    (15) var_declaration -> type_specifier . var_declaration2 PUNTOYCOMA
    (16) var_declaration -> type_specifier . DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
    (27) fun_declaration -> type_specifier . type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> type_specifier . type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (29) type_function -> . STATIC
    (30) type_function -> . empty
    (114) empty -> .

    DOLAR           shift and go to state 50
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    STATIC          shift and go to state 52
    FUNCTION        reduce using rule 114 (empty -> .)

    var_declaration2               shift and go to state 49
    type_function                  shift and go to state 51
    empty                          shift and go to state 53

state 10

    (78) expression -> var_declaration2 . IGUAL expression
    (80) expression -> var_declaration2 . IGUAL var_declaration2 PUNTOYCOMA
    (106) factor -> var_declaration2 .

    IGUAL           shift and go to state 54
    MINUSMINUS      reduce using rule 106 (factor -> var_declaration2 .)
    PLUSPLUS        reduce using rule 106 (factor -> var_declaration2 .)
    MULTI           reduce using rule 106 (factor -> var_declaration2 .)
    DIVIDE          reduce using rule 106 (factor -> var_declaration2 .)
    MENORQ          reduce using rule 106 (factor -> var_declaration2 .)
    MAYORQ          reduce using rule 106 (factor -> var_declaration2 .)
    DIFERENTE       reduce using rule 106 (factor -> var_declaration2 .)
    LOGNEGACION     reduce using rule 106 (factor -> var_declaration2 .)
    IQUALIQUAL      reduce using rule 106 (factor -> var_declaration2 .)
    LOGOR           reduce using rule 106 (factor -> var_declaration2 .)
    LOGXOR          reduce using rule 106 (factor -> var_declaration2 .)
    LOGAND          reduce using rule 106 (factor -> var_declaration2 .)
    LOGY            reduce using rule 106 (factor -> var_declaration2 .)
    PLUS            reduce using rule 106 (factor -> var_declaration2 .)
    MINUS           reduce using rule 106 (factor -> var_declaration2 .)
    PUNTOYCOMA      reduce using rule 106 (factor -> var_declaration2 .)
    PARENDERECHA    reduce using rule 106 (factor -> var_declaration2 .)
    COMA            reduce using rule 106 (factor -> var_declaration2 .)
    PUNTO           reduce using rule 106 (factor -> var_declaration2 .)


state 11

    (51) expression_stmt -> PUNTOYCOMA .

    INICIO          reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    CLASS           reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    PUBLIC          reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    PRIVATE         reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    PRINT           reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    IF              reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    SWITCH          reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    CASE            reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    DEFAULT         reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    WHILE           reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    FOR             reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    DO              reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    RETURN          reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    CONTINUE        reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    NEW             reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    DOLAR           reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    AMPERSAND       reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    CONST           reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    NUMERO          reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    $end            reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    FIN             reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    BREAK           reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    LLAVEDER        reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)
    ELSE            reduce using rule 51 (expression_stmt -> PUNTOYCOMA .)


state 12

    (17) var_declaration2 -> DOLAR . IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> DOLAR . IDENTIFICADOR
    (19) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NUMERO
    (22) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NULL
    (109) call -> DOLAR . IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    IDENTIFICADOR   shift and go to state 55


state 13

    (26) operaction_declaration -> statement .

    INICIO          reduce using rule 26 (operaction_declaration -> statement .)
    CLASS           reduce using rule 26 (operaction_declaration -> statement .)
    PUBLIC          reduce using rule 26 (operaction_declaration -> statement .)
    PRIVATE         reduce using rule 26 (operaction_declaration -> statement .)
    PUNTOYCOMA      reduce using rule 26 (operaction_declaration -> statement .)
    PRINT           reduce using rule 26 (operaction_declaration -> statement .)
    LLAVEIZQ        reduce using rule 26 (operaction_declaration -> statement .)
    IF              reduce using rule 26 (operaction_declaration -> statement .)
    SWITCH          reduce using rule 26 (operaction_declaration -> statement .)
    CASE            reduce using rule 26 (operaction_declaration -> statement .)
    DEFAULT         reduce using rule 26 (operaction_declaration -> statement .)
    WHILE           reduce using rule 26 (operaction_declaration -> statement .)
    FOR             reduce using rule 26 (operaction_declaration -> statement .)
    DO              reduce using rule 26 (operaction_declaration -> statement .)
    RETURN          reduce using rule 26 (operaction_declaration -> statement .)
    CONTINUE        reduce using rule 26 (operaction_declaration -> statement .)
    NEW             reduce using rule 26 (operaction_declaration -> statement .)
    DOLAR           reduce using rule 26 (operaction_declaration -> statement .)
    AMPERSAND       reduce using rule 26 (operaction_declaration -> statement .)
    CONST           reduce using rule 26 (operaction_declaration -> statement .)
    PARENIZQUIERDA  reduce using rule 26 (operaction_declaration -> statement .)
    NUMERO          reduce using rule 26 (operaction_declaration -> statement .)
    $end            reduce using rule 26 (operaction_declaration -> statement .)
    FIN             reduce using rule 26 (operaction_declaration -> statement .)


state 14

    (105) factor -> PARENIZQUIERDA . expression PARENDERECHA
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 56
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 15

    (44) statement -> compount_stmt .

    INICIO          reduce using rule 44 (statement -> compount_stmt .)
    CLASS           reduce using rule 44 (statement -> compount_stmt .)
    PUBLIC          reduce using rule 44 (statement -> compount_stmt .)
    PRIVATE         reduce using rule 44 (statement -> compount_stmt .)
    PUNTOYCOMA      reduce using rule 44 (statement -> compount_stmt .)
    PRINT           reduce using rule 44 (statement -> compount_stmt .)
    LLAVEIZQ        reduce using rule 44 (statement -> compount_stmt .)
    IF              reduce using rule 44 (statement -> compount_stmt .)
    SWITCH          reduce using rule 44 (statement -> compount_stmt .)
    CASE            reduce using rule 44 (statement -> compount_stmt .)
    DEFAULT         reduce using rule 44 (statement -> compount_stmt .)
    WHILE           reduce using rule 44 (statement -> compount_stmt .)
    FOR             reduce using rule 44 (statement -> compount_stmt .)
    DO              reduce using rule 44 (statement -> compount_stmt .)
    RETURN          reduce using rule 44 (statement -> compount_stmt .)
    CONTINUE        reduce using rule 44 (statement -> compount_stmt .)
    NEW             reduce using rule 44 (statement -> compount_stmt .)
    DOLAR           reduce using rule 44 (statement -> compount_stmt .)
    AMPERSAND       reduce using rule 44 (statement -> compount_stmt .)
    CONST           reduce using rule 44 (statement -> compount_stmt .)
    PARENIZQUIERDA  reduce using rule 44 (statement -> compount_stmt .)
    NUMERO          reduce using rule 44 (statement -> compount_stmt .)
    $end            reduce using rule 44 (statement -> compount_stmt .)
    FIN             reduce using rule 44 (statement -> compount_stmt .)
    BREAK           reduce using rule 44 (statement -> compount_stmt .)
    LLAVEDER        reduce using rule 44 (statement -> compount_stmt .)
    ELSE            reduce using rule 44 (statement -> compount_stmt .)


state 16

    (21) var_declaration2 -> AMPERSAND . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 57


state 17

    (14) header_declaration -> INICIO . program FIN
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . operaction_declaration
    (6) declaration -> . fun_declaration
    (7) declaration -> . header_declaration
    (8) declaration -> . class_declaration
    (15) var_declaration -> . type_specifier var_declaration2 PUNTOYCOMA
    (16) var_declaration -> . type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
    (26) operaction_declaration -> . statement
    (27) fun_declaration -> . type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> . type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (14) header_declaration -> . INICIO program FIN
    (9) class_declaration -> . CLASS IDENTIFICADOR bloque_declaration
    (24) type_specifier -> . PUBLIC
    (25) type_specifier -> . PRIVATE
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    INICIO          shift and go to state 17
    CLASS           shift and go to state 18
    PUBLIC          shift and go to state 19
    PRIVATE         shift and go to state 20
    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    program                        shift and go to state 58
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    operaction_declaration         shift and go to state 5
    fun_declaration                shift and go to state 6
    header_declaration             shift and go to state 7
    class_declaration              shift and go to state 8
    type_specifier                 shift and go to state 9
    var_declaration2               shift and go to state 10
    statement                      shift and go to state 13
    compount_stmt                  shift and go to state 15
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    expression                     shift and go to state 28
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 18

    (9) class_declaration -> CLASS . IDENTIFICADOR bloque_declaration

    IDENTIFICADOR   shift and go to state 59


state 19

    (24) type_specifier -> PUBLIC .

    DOLAR           reduce using rule 24 (type_specifier -> PUBLIC .)
    AMPERSAND       reduce using rule 24 (type_specifier -> PUBLIC .)
    CONST           reduce using rule 24 (type_specifier -> PUBLIC .)
    STATIC          reduce using rule 24 (type_specifier -> PUBLIC .)
    FUNCTION        reduce using rule 24 (type_specifier -> PUBLIC .)


state 20

    (25) type_specifier -> PRIVATE .

    DOLAR           reduce using rule 25 (type_specifier -> PRIVATE .)
    AMPERSAND       reduce using rule 25 (type_specifier -> PRIVATE .)
    CONST           reduce using rule 25 (type_specifier -> PRIVATE .)
    STATIC          reduce using rule 25 (type_specifier -> PRIVATE .)
    FUNCTION        reduce using rule 25 (type_specifier -> PRIVATE .)


state 21

    (42) statement -> expression_stmt .

    INICIO          reduce using rule 42 (statement -> expression_stmt .)
    CLASS           reduce using rule 42 (statement -> expression_stmt .)
    PUBLIC          reduce using rule 42 (statement -> expression_stmt .)
    PRIVATE         reduce using rule 42 (statement -> expression_stmt .)
    PUNTOYCOMA      reduce using rule 42 (statement -> expression_stmt .)
    PRINT           reduce using rule 42 (statement -> expression_stmt .)
    LLAVEIZQ        reduce using rule 42 (statement -> expression_stmt .)
    IF              reduce using rule 42 (statement -> expression_stmt .)
    SWITCH          reduce using rule 42 (statement -> expression_stmt .)
    CASE            reduce using rule 42 (statement -> expression_stmt .)
    DEFAULT         reduce using rule 42 (statement -> expression_stmt .)
    WHILE           reduce using rule 42 (statement -> expression_stmt .)
    FOR             reduce using rule 42 (statement -> expression_stmt .)
    DO              reduce using rule 42 (statement -> expression_stmt .)
    RETURN          reduce using rule 42 (statement -> expression_stmt .)
    CONTINUE        reduce using rule 42 (statement -> expression_stmt .)
    NEW             reduce using rule 42 (statement -> expression_stmt .)
    DOLAR           reduce using rule 42 (statement -> expression_stmt .)
    AMPERSAND       reduce using rule 42 (statement -> expression_stmt .)
    CONST           reduce using rule 42 (statement -> expression_stmt .)
    PARENIZQUIERDA  reduce using rule 42 (statement -> expression_stmt .)
    NUMERO          reduce using rule 42 (statement -> expression_stmt .)
    $end            reduce using rule 42 (statement -> expression_stmt .)
    FIN             reduce using rule 42 (statement -> expression_stmt .)
    BREAK           reduce using rule 42 (statement -> expression_stmt .)
    LLAVEDER        reduce using rule 42 (statement -> expression_stmt .)
    ELSE            reduce using rule 42 (statement -> expression_stmt .)


state 22

    (43) statement -> imprimir_pantalla .

    INICIO          reduce using rule 43 (statement -> imprimir_pantalla .)
    CLASS           reduce using rule 43 (statement -> imprimir_pantalla .)
    PUBLIC          reduce using rule 43 (statement -> imprimir_pantalla .)
    PRIVATE         reduce using rule 43 (statement -> imprimir_pantalla .)
    PUNTOYCOMA      reduce using rule 43 (statement -> imprimir_pantalla .)
    PRINT           reduce using rule 43 (statement -> imprimir_pantalla .)
    LLAVEIZQ        reduce using rule 43 (statement -> imprimir_pantalla .)
    IF              reduce using rule 43 (statement -> imprimir_pantalla .)
    SWITCH          reduce using rule 43 (statement -> imprimir_pantalla .)
    CASE            reduce using rule 43 (statement -> imprimir_pantalla .)
    DEFAULT         reduce using rule 43 (statement -> imprimir_pantalla .)
    WHILE           reduce using rule 43 (statement -> imprimir_pantalla .)
    FOR             reduce using rule 43 (statement -> imprimir_pantalla .)
    DO              reduce using rule 43 (statement -> imprimir_pantalla .)
    RETURN          reduce using rule 43 (statement -> imprimir_pantalla .)
    CONTINUE        reduce using rule 43 (statement -> imprimir_pantalla .)
    NEW             reduce using rule 43 (statement -> imprimir_pantalla .)
    DOLAR           reduce using rule 43 (statement -> imprimir_pantalla .)
    AMPERSAND       reduce using rule 43 (statement -> imprimir_pantalla .)
    CONST           reduce using rule 43 (statement -> imprimir_pantalla .)
    PARENIZQUIERDA  reduce using rule 43 (statement -> imprimir_pantalla .)
    NUMERO          reduce using rule 43 (statement -> imprimir_pantalla .)
    $end            reduce using rule 43 (statement -> imprimir_pantalla .)
    FIN             reduce using rule 43 (statement -> imprimir_pantalla .)
    BREAK           reduce using rule 43 (statement -> imprimir_pantalla .)
    LLAVEDER        reduce using rule 43 (statement -> imprimir_pantalla .)
    ELSE            reduce using rule 43 (statement -> imprimir_pantalla .)


state 23

    (45) statement -> selection_stmt .

    INICIO          reduce using rule 45 (statement -> selection_stmt .)
    CLASS           reduce using rule 45 (statement -> selection_stmt .)
    PUBLIC          reduce using rule 45 (statement -> selection_stmt .)
    PRIVATE         reduce using rule 45 (statement -> selection_stmt .)
    PUNTOYCOMA      reduce using rule 45 (statement -> selection_stmt .)
    PRINT           reduce using rule 45 (statement -> selection_stmt .)
    LLAVEIZQ        reduce using rule 45 (statement -> selection_stmt .)
    IF              reduce using rule 45 (statement -> selection_stmt .)
    SWITCH          reduce using rule 45 (statement -> selection_stmt .)
    CASE            reduce using rule 45 (statement -> selection_stmt .)
    DEFAULT         reduce using rule 45 (statement -> selection_stmt .)
    WHILE           reduce using rule 45 (statement -> selection_stmt .)
    FOR             reduce using rule 45 (statement -> selection_stmt .)
    DO              reduce using rule 45 (statement -> selection_stmt .)
    RETURN          reduce using rule 45 (statement -> selection_stmt .)
    CONTINUE        reduce using rule 45 (statement -> selection_stmt .)
    NEW             reduce using rule 45 (statement -> selection_stmt .)
    DOLAR           reduce using rule 45 (statement -> selection_stmt .)
    AMPERSAND       reduce using rule 45 (statement -> selection_stmt .)
    CONST           reduce using rule 45 (statement -> selection_stmt .)
    PARENIZQUIERDA  reduce using rule 45 (statement -> selection_stmt .)
    NUMERO          reduce using rule 45 (statement -> selection_stmt .)
    $end            reduce using rule 45 (statement -> selection_stmt .)
    FIN             reduce using rule 45 (statement -> selection_stmt .)
    BREAK           reduce using rule 45 (statement -> selection_stmt .)
    LLAVEDER        reduce using rule 45 (statement -> selection_stmt .)
    ELSE            reduce using rule 45 (statement -> selection_stmt .)


state 24

    (46) statement -> iteration_stmt .

    INICIO          reduce using rule 46 (statement -> iteration_stmt .)
    CLASS           reduce using rule 46 (statement -> iteration_stmt .)
    PUBLIC          reduce using rule 46 (statement -> iteration_stmt .)
    PRIVATE         reduce using rule 46 (statement -> iteration_stmt .)
    PUNTOYCOMA      reduce using rule 46 (statement -> iteration_stmt .)
    PRINT           reduce using rule 46 (statement -> iteration_stmt .)
    LLAVEIZQ        reduce using rule 46 (statement -> iteration_stmt .)
    IF              reduce using rule 46 (statement -> iteration_stmt .)
    SWITCH          reduce using rule 46 (statement -> iteration_stmt .)
    CASE            reduce using rule 46 (statement -> iteration_stmt .)
    DEFAULT         reduce using rule 46 (statement -> iteration_stmt .)
    WHILE           reduce using rule 46 (statement -> iteration_stmt .)
    FOR             reduce using rule 46 (statement -> iteration_stmt .)
    DO              reduce using rule 46 (statement -> iteration_stmt .)
    RETURN          reduce using rule 46 (statement -> iteration_stmt .)
    CONTINUE        reduce using rule 46 (statement -> iteration_stmt .)
    NEW             reduce using rule 46 (statement -> iteration_stmt .)
    DOLAR           reduce using rule 46 (statement -> iteration_stmt .)
    AMPERSAND       reduce using rule 46 (statement -> iteration_stmt .)
    CONST           reduce using rule 46 (statement -> iteration_stmt .)
    PARENIZQUIERDA  reduce using rule 46 (statement -> iteration_stmt .)
    NUMERO          reduce using rule 46 (statement -> iteration_stmt .)
    $end            reduce using rule 46 (statement -> iteration_stmt .)
    FIN             reduce using rule 46 (statement -> iteration_stmt .)
    BREAK           reduce using rule 46 (statement -> iteration_stmt .)
    LLAVEDER        reduce using rule 46 (statement -> iteration_stmt .)
    ELSE            reduce using rule 46 (statement -> iteration_stmt .)


state 25

    (47) statement -> return_stmt .

    INICIO          reduce using rule 47 (statement -> return_stmt .)
    CLASS           reduce using rule 47 (statement -> return_stmt .)
    PUBLIC          reduce using rule 47 (statement -> return_stmt .)
    PRIVATE         reduce using rule 47 (statement -> return_stmt .)
    PUNTOYCOMA      reduce using rule 47 (statement -> return_stmt .)
    PRINT           reduce using rule 47 (statement -> return_stmt .)
    LLAVEIZQ        reduce using rule 47 (statement -> return_stmt .)
    IF              reduce using rule 47 (statement -> return_stmt .)
    SWITCH          reduce using rule 47 (statement -> return_stmt .)
    CASE            reduce using rule 47 (statement -> return_stmt .)
    DEFAULT         reduce using rule 47 (statement -> return_stmt .)
    WHILE           reduce using rule 47 (statement -> return_stmt .)
    FOR             reduce using rule 47 (statement -> return_stmt .)
    DO              reduce using rule 47 (statement -> return_stmt .)
    RETURN          reduce using rule 47 (statement -> return_stmt .)
    CONTINUE        reduce using rule 47 (statement -> return_stmt .)
    NEW             reduce using rule 47 (statement -> return_stmt .)
    DOLAR           reduce using rule 47 (statement -> return_stmt .)
    AMPERSAND       reduce using rule 47 (statement -> return_stmt .)
    CONST           reduce using rule 47 (statement -> return_stmt .)
    PARENIZQUIERDA  reduce using rule 47 (statement -> return_stmt .)
    NUMERO          reduce using rule 47 (statement -> return_stmt .)
    $end            reduce using rule 47 (statement -> return_stmt .)
    FIN             reduce using rule 47 (statement -> return_stmt .)
    BREAK           reduce using rule 47 (statement -> return_stmt .)
    LLAVEDER        reduce using rule 47 (statement -> return_stmt .)
    ELSE            reduce using rule 47 (statement -> return_stmt .)


state 26

    (48) statement -> continue_stmt .

    INICIO          reduce using rule 48 (statement -> continue_stmt .)
    CLASS           reduce using rule 48 (statement -> continue_stmt .)
    PUBLIC          reduce using rule 48 (statement -> continue_stmt .)
    PRIVATE         reduce using rule 48 (statement -> continue_stmt .)
    PUNTOYCOMA      reduce using rule 48 (statement -> continue_stmt .)
    PRINT           reduce using rule 48 (statement -> continue_stmt .)
    LLAVEIZQ        reduce using rule 48 (statement -> continue_stmt .)
    IF              reduce using rule 48 (statement -> continue_stmt .)
    SWITCH          reduce using rule 48 (statement -> continue_stmt .)
    CASE            reduce using rule 48 (statement -> continue_stmt .)
    DEFAULT         reduce using rule 48 (statement -> continue_stmt .)
    WHILE           reduce using rule 48 (statement -> continue_stmt .)
    FOR             reduce using rule 48 (statement -> continue_stmt .)
    DO              reduce using rule 48 (statement -> continue_stmt .)
    RETURN          reduce using rule 48 (statement -> continue_stmt .)
    CONTINUE        reduce using rule 48 (statement -> continue_stmt .)
    NEW             reduce using rule 48 (statement -> continue_stmt .)
    DOLAR           reduce using rule 48 (statement -> continue_stmt .)
    AMPERSAND       reduce using rule 48 (statement -> continue_stmt .)
    CONST           reduce using rule 48 (statement -> continue_stmt .)
    PARENIZQUIERDA  reduce using rule 48 (statement -> continue_stmt .)
    NUMERO          reduce using rule 48 (statement -> continue_stmt .)
    $end            reduce using rule 48 (statement -> continue_stmt .)
    FIN             reduce using rule 48 (statement -> continue_stmt .)
    BREAK           reduce using rule 48 (statement -> continue_stmt .)
    LLAVEDER        reduce using rule 48 (statement -> continue_stmt .)
    ELSE            reduce using rule 48 (statement -> continue_stmt .)


state 27

    (49) statement -> object_stmt .

    INICIO          reduce using rule 49 (statement -> object_stmt .)
    CLASS           reduce using rule 49 (statement -> object_stmt .)
    PUBLIC          reduce using rule 49 (statement -> object_stmt .)
    PRIVATE         reduce using rule 49 (statement -> object_stmt .)
    PUNTOYCOMA      reduce using rule 49 (statement -> object_stmt .)
    PRINT           reduce using rule 49 (statement -> object_stmt .)
    LLAVEIZQ        reduce using rule 49 (statement -> object_stmt .)
    IF              reduce using rule 49 (statement -> object_stmt .)
    SWITCH          reduce using rule 49 (statement -> object_stmt .)
    CASE            reduce using rule 49 (statement -> object_stmt .)
    DEFAULT         reduce using rule 49 (statement -> object_stmt .)
    WHILE           reduce using rule 49 (statement -> object_stmt .)
    FOR             reduce using rule 49 (statement -> object_stmt .)
    DO              reduce using rule 49 (statement -> object_stmt .)
    RETURN          reduce using rule 49 (statement -> object_stmt .)
    CONTINUE        reduce using rule 49 (statement -> object_stmt .)
    NEW             reduce using rule 49 (statement -> object_stmt .)
    DOLAR           reduce using rule 49 (statement -> object_stmt .)
    AMPERSAND       reduce using rule 49 (statement -> object_stmt .)
    CONST           reduce using rule 49 (statement -> object_stmt .)
    PARENIZQUIERDA  reduce using rule 49 (statement -> object_stmt .)
    NUMERO          reduce using rule 49 (statement -> object_stmt .)
    $end            reduce using rule 49 (statement -> object_stmt .)
    FIN             reduce using rule 49 (statement -> object_stmt .)
    BREAK           reduce using rule 49 (statement -> object_stmt .)
    LLAVEDER        reduce using rule 49 (statement -> object_stmt .)
    ELSE            reduce using rule 49 (statement -> object_stmt .)


state 28

    (50) expression_stmt -> expression . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 60


state 29

    (71) imprimir_pantalla -> PRINT . COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> PRINT . COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> PRINT . COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA

    COMILLA         shift and go to state 61


state 30

    (36) compount_stmt -> LLAVEIZQ . local_declarations statement_list LLAVEDER
    (37) compount_stmt -> LLAVEIZQ . local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (38) local_declarations -> . local_declarations var_declaration
    (39) local_declarations -> . empty
    (114) empty -> .

    PUBLIC          reduce using rule 114 (empty -> .)
    PRIVATE         reduce using rule 114 (empty -> .)
    LLAVEDER        reduce using rule 114 (empty -> .)
    PUNTOYCOMA      reduce using rule 114 (empty -> .)
    PRINT           reduce using rule 114 (empty -> .)
    LLAVEIZQ        reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    SWITCH          reduce using rule 114 (empty -> .)
    CASE            reduce using rule 114 (empty -> .)
    DEFAULT         reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    CONTINUE        reduce using rule 114 (empty -> .)
    NEW             reduce using rule 114 (empty -> .)
    DOLAR           reduce using rule 114 (empty -> .)
    AMPERSAND       reduce using rule 114 (empty -> .)
    CONST           reduce using rule 114 (empty -> .)
    PARENIZQUIERDA  reduce using rule 114 (empty -> .)
    NUMERO          reduce using rule 114 (empty -> .)

    local_declarations             shift and go to state 62
    empty                          shift and go to state 63

state 31

    (57) iteration_stmt -> WHILE . PARENIZQUIERDA expression PARENDERECHA statement

    PARENIZQUIERDA  shift and go to state 64


state 32

    (52) selection_stmt -> IF . PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> IF . PARENIZQUIERDA expression PARENDERECHA statement ELSE statement

    PARENIZQUIERDA  shift and go to state 65


state 33

    (54) selection_stmt -> SWITCH . PARENIZQUIERDA var_declaration2 PARENDERECHA statement

    PARENIZQUIERDA  shift and go to state 66


state 34

    (55) selection_stmt -> CASE . NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA

    NUMERO          shift and go to state 67


state 35

    (108) factor -> NUMERO .

    MINUSMINUS      reduce using rule 108 (factor -> NUMERO .)
    PLUSPLUS        reduce using rule 108 (factor -> NUMERO .)
    MULTI           reduce using rule 108 (factor -> NUMERO .)
    DIVIDE          reduce using rule 108 (factor -> NUMERO .)
    MENORQ          reduce using rule 108 (factor -> NUMERO .)
    MAYORQ          reduce using rule 108 (factor -> NUMERO .)
    DIFERENTE       reduce using rule 108 (factor -> NUMERO .)
    LOGNEGACION     reduce using rule 108 (factor -> NUMERO .)
    IQUALIQUAL      reduce using rule 108 (factor -> NUMERO .)
    LOGOR           reduce using rule 108 (factor -> NUMERO .)
    LOGXOR          reduce using rule 108 (factor -> NUMERO .)
    LOGAND          reduce using rule 108 (factor -> NUMERO .)
    LOGY            reduce using rule 108 (factor -> NUMERO .)
    PLUS            reduce using rule 108 (factor -> NUMERO .)
    MINUS           reduce using rule 108 (factor -> NUMERO .)
    PUNTOYCOMA      reduce using rule 108 (factor -> NUMERO .)
    PARENDERECHA    reduce using rule 108 (factor -> NUMERO .)
    COMA            reduce using rule 108 (factor -> NUMERO .)
    PUNTO           reduce using rule 108 (factor -> NUMERO .)


state 36

    (56) selection_stmt -> DEFAULT . DOSPUNTOS statement BREAK PUNTOYCOMA

    DOSPUNTOS       shift and go to state 68


state 37

    (58) iteration_stmt -> FOR . PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement

    PARENIZQUIERDA  shift and go to state 69


state 38

    (81) simple_expression -> additive_expression . relop additive_expression
    (82) simple_expression -> additive_expression . relop additive_expression relop additive_expression
    (83) simple_expression -> additive_expression . relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> additive_expression . relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> additive_expression .
    (95) additive_expression -> additive_expression . addop term
    (86) relop -> . MENORQ
    (87) relop -> . MAYORQ
    (88) relop -> . DIFERENTE
    (89) relop -> . LOGNEGACION
    (90) relop -> . IQUALIQUAL
    (91) relop -> . LOGOR
    (92) relop -> . LOGXOR
    (93) relop -> . LOGAND
    (94) relop -> . LOGY
    (99) addop -> . PLUS
    (100) addop -> . MINUS

    PUNTOYCOMA      reduce using rule 85 (simple_expression -> additive_expression .)
    PARENDERECHA    reduce using rule 85 (simple_expression -> additive_expression .)
    COMA            reduce using rule 85 (simple_expression -> additive_expression .)
    PUNTO           reduce using rule 85 (simple_expression -> additive_expression .)
    MENORQ          shift and go to state 72
    MAYORQ          shift and go to state 73
    DIFERENTE       shift and go to state 74
    LOGNEGACION     shift and go to state 75
    IQUALIQUAL      shift and go to state 76
    LOGOR           shift and go to state 77
    LOGXOR          shift and go to state 78
    LOGAND          shift and go to state 79
    LOGY            shift and go to state 80
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

    relop                          shift and go to state 70
    addop                          shift and go to state 71

state 39

    (59) iteration_stmt -> DO . statement
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    statement                      shift and go to state 83
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    expression                     shift and go to state 28
    var_declaration2               shift and go to state 10
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 40

    (60) return_stmt -> RETURN . PUNTOYCOMA
    (61) return_stmt -> RETURN . expression PUNTOYCOMA
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 84
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 85
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 41

    (62) continue_stmt -> CONTINUE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 86


state 42

    (63) object_stmt -> NEW . DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento

    DOLAR           shift and go to state 87


state 43

    (79) expression -> simple_expression .

    PUNTOYCOMA      reduce using rule 79 (expression -> simple_expression .)
    PARENDERECHA    reduce using rule 79 (expression -> simple_expression .)
    COMA            reduce using rule 79 (expression -> simple_expression .)
    PUNTO           reduce using rule 79 (expression -> simple_expression .)


state 44

    (23) var_declaration2 -> CONST . IDENTIFICADOR IGUAL NUMERO

    IDENTIFICADOR   shift and go to state 88


state 45

    (96) additive_expression -> term .
    (97) additive_expression -> term . MINUSMINUS
    (98) additive_expression -> term . PLUSPLUS
    (101) term -> term . mulop factor
    (103) mulop -> . MULTI
    (104) mulop -> . DIVIDE

    MENORQ          reduce using rule 96 (additive_expression -> term .)
    MAYORQ          reduce using rule 96 (additive_expression -> term .)
    DIFERENTE       reduce using rule 96 (additive_expression -> term .)
    LOGNEGACION     reduce using rule 96 (additive_expression -> term .)
    IQUALIQUAL      reduce using rule 96 (additive_expression -> term .)
    LOGOR           reduce using rule 96 (additive_expression -> term .)
    LOGXOR          reduce using rule 96 (additive_expression -> term .)
    LOGAND          reduce using rule 96 (additive_expression -> term .)
    LOGY            reduce using rule 96 (additive_expression -> term .)
    PLUS            reduce using rule 96 (additive_expression -> term .)
    MINUS           reduce using rule 96 (additive_expression -> term .)
    PUNTOYCOMA      reduce using rule 96 (additive_expression -> term .)
    PARENDERECHA    reduce using rule 96 (additive_expression -> term .)
    COMA            reduce using rule 96 (additive_expression -> term .)
    PUNTO           reduce using rule 96 (additive_expression -> term .)
    MINUSMINUS      shift and go to state 89
    PLUSPLUS        shift and go to state 90
    MULTI           shift and go to state 92
    DIVIDE          shift and go to state 93

    mulop                          shift and go to state 91

state 46

    (102) term -> factor .

    MINUSMINUS      reduce using rule 102 (term -> factor .)
    PLUSPLUS        reduce using rule 102 (term -> factor .)
    MULTI           reduce using rule 102 (term -> factor .)
    DIVIDE          reduce using rule 102 (term -> factor .)
    MENORQ          reduce using rule 102 (term -> factor .)
    MAYORQ          reduce using rule 102 (term -> factor .)
    DIFERENTE       reduce using rule 102 (term -> factor .)
    LOGNEGACION     reduce using rule 102 (term -> factor .)
    IQUALIQUAL      reduce using rule 102 (term -> factor .)
    LOGOR           reduce using rule 102 (term -> factor .)
    LOGXOR          reduce using rule 102 (term -> factor .)
    LOGAND          reduce using rule 102 (term -> factor .)
    LOGY            reduce using rule 102 (term -> factor .)
    PLUS            reduce using rule 102 (term -> factor .)
    MINUS           reduce using rule 102 (term -> factor .)
    PUNTOYCOMA      reduce using rule 102 (term -> factor .)
    PARENDERECHA    reduce using rule 102 (term -> factor .)
    COMA            reduce using rule 102 (term -> factor .)
    PUNTO           reduce using rule 102 (term -> factor .)


state 47

    (107) factor -> call .

    MINUSMINUS      reduce using rule 107 (factor -> call .)
    PLUSPLUS        reduce using rule 107 (factor -> call .)
    MULTI           reduce using rule 107 (factor -> call .)
    DIVIDE          reduce using rule 107 (factor -> call .)
    MENORQ          reduce using rule 107 (factor -> call .)
    MAYORQ          reduce using rule 107 (factor -> call .)
    DIFERENTE       reduce using rule 107 (factor -> call .)
    LOGNEGACION     reduce using rule 107 (factor -> call .)
    IQUALIQUAL      reduce using rule 107 (factor -> call .)
    LOGOR           reduce using rule 107 (factor -> call .)
    LOGXOR          reduce using rule 107 (factor -> call .)
    LOGAND          reduce using rule 107 (factor -> call .)
    LOGY            reduce using rule 107 (factor -> call .)
    PLUS            reduce using rule 107 (factor -> call .)
    MINUS           reduce using rule 107 (factor -> call .)
    PUNTOYCOMA      reduce using rule 107 (factor -> call .)
    PARENDERECHA    reduce using rule 107 (factor -> call .)
    COMA            reduce using rule 107 (factor -> call .)
    PUNTO           reduce using rule 107 (factor -> call .)


state 48

    (2) declaration_list -> declaration_list declaration .

    INICIO          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CLASS           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PUBLIC          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PRIVATE         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PUNTOYCOMA      reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LLAVEIZQ        reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SWITCH          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CASE            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DEFAULT         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DO              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CONTINUE        reduce using rule 2 (declaration_list -> declaration_list declaration .)
    NEW             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DOLAR           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    AMPERSAND       reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CONST           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    PARENIZQUIERDA  reduce using rule 2 (declaration_list -> declaration_list declaration .)
    NUMERO          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FIN             reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 49

    (15) var_declaration -> type_specifier var_declaration2 . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 94


state 50

    (16) var_declaration -> type_specifier DOLAR . IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
    (17) var_declaration2 -> DOLAR . IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> DOLAR . IDENTIFICADOR
    (19) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NUMERO
    (22) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NULL

    IDENTIFICADOR   shift and go to state 95


state 51

    (27) fun_declaration -> type_specifier type_function . FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> type_specifier type_function . FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt

    FUNCTION        shift and go to state 96


state 52

    (29) type_function -> STATIC .

    FUNCTION        reduce using rule 29 (type_function -> STATIC .)


state 53

    (30) type_function -> empty .

    FUNCTION        reduce using rule 30 (type_function -> empty .)


state 54

    (78) expression -> var_declaration2 IGUAL . expression
    (80) expression -> var_declaration2 IGUAL . var_declaration2 PUNTOYCOMA
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    var_declaration2               shift and go to state 97
    expression                     shift and go to state 98
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 55

    (17) var_declaration2 -> DOLAR IDENTIFICADOR . COMA var_declaration2
    (18) var_declaration2 -> DOLAR IDENTIFICADOR .
    (19) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NUMERO
    (22) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NULL
    (109) call -> DOLAR IDENTIFICADOR . PARENIZQUIERDA args PARENDERECHA

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
    COMA            shift and go to state 99
    MINUSMINUS      reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PLUSPLUS        reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MULTI           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    DIVIDE          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MENORQ          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MAYORQ          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGNEGACION     reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    IQUALIQUAL      reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGOR           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGXOR          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGAND          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGY            reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PLUS            reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MINUS           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PUNTOYCOMA      reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PARENDERECHA    reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PUNTO           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    IGUAL           shift and go to state 100
    PARENIZQUIERDA  shift and go to state 101

  ! IGUAL           [ reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .) ]
  ! COMA            [ reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .) ]


state 56

    (105) factor -> PARENIZQUIERDA expression . PARENDERECHA

    PARENDERECHA    shift and go to state 102


state 57

    (21) var_declaration2 -> AMPERSAND IDENTIFICADOR .

    IGUAL           reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    MINUSMINUS      reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    PLUSPLUS        reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    MULTI           reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    DIVIDE          reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    MENORQ          reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    MAYORQ          reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    DIFERENTE       reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    LOGNEGACION     reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    IQUALIQUAL      reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    LOGOR           reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    LOGXOR          reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    LOGAND          reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    LOGY            reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    PLUS            reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    MINUS           reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    PUNTOYCOMA      reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    PARENDERECHA    reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    COMA            reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)
    PUNTO           reduce using rule 21 (var_declaration2 -> AMPERSAND IDENTIFICADOR .)


state 58

    (14) header_declaration -> INICIO program . FIN

    FIN             shift and go to state 103


state 59

    (9) class_declaration -> CLASS IDENTIFICADOR . bloque_declaration
    (10) bloque_declaration -> . LLAVEIZQ bloque_declaration_2 LLAVEDER
    (11) bloque_declaration -> . CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration

    LLAVEIZQ        shift and go to state 106
    CLASS           shift and go to state 104

    bloque_declaration             shift and go to state 105

state 60

    (50) expression_stmt -> expression PUNTOYCOMA .

    INICIO          reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    CLASS           reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    PUBLIC          reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    PRIVATE         reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    PRINT           reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    IF              reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    SWITCH          reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    CASE            reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    DEFAULT         reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    WHILE           reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    FOR             reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    DO              reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    RETURN          reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    CONTINUE        reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    NEW             reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    DOLAR           reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    AMPERSAND       reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    CONST           reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    NUMERO          reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    $end            reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    FIN             reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    BREAK           reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    LLAVEDER        reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)
    ELSE            reduce using rule 50 (expression_stmt -> expression PUNTOYCOMA .)


state 61

    (71) imprimir_pantalla -> PRINT COMILLA . CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> PRINT COMILLA . CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> PRINT COMILLA . CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (74) CADENA -> . IDENTIFICADOR CADENA
    (75) CADENA -> . NUMERO CADENA
    (76) CADENA -> . NUMERO
    (77) CADENA -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 108
    NUMERO          shift and go to state 109

    CADENA                         shift and go to state 107

state 62

    (36) compount_stmt -> LLAVEIZQ local_declarations . statement_list LLAVEDER
    (37) compount_stmt -> LLAVEIZQ local_declarations . statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (38) local_declarations -> local_declarations . var_declaration
    (40) statement_list -> . statement_list statement
    (41) statement_list -> . empty
    (15) var_declaration -> . type_specifier var_declaration2 PUNTOYCOMA
    (16) var_declaration -> . type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
    (114) empty -> .
    (24) type_specifier -> . PUBLIC
    (25) type_specifier -> . PRIVATE

    LLAVEDER        reduce using rule 114 (empty -> .)
    PUNTOYCOMA      reduce using rule 114 (empty -> .)
    PRINT           reduce using rule 114 (empty -> .)
    LLAVEIZQ        reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    SWITCH          reduce using rule 114 (empty -> .)
    CASE            reduce using rule 114 (empty -> .)
    DEFAULT         reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    FOR             reduce using rule 114 (empty -> .)
    DO              reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    CONTINUE        reduce using rule 114 (empty -> .)
    NEW             reduce using rule 114 (empty -> .)
    DOLAR           reduce using rule 114 (empty -> .)
    AMPERSAND       reduce using rule 114 (empty -> .)
    CONST           reduce using rule 114 (empty -> .)
    PARENIZQUIERDA  reduce using rule 114 (empty -> .)
    NUMERO          reduce using rule 114 (empty -> .)
    PUBLIC          shift and go to state 19
    PRIVATE         shift and go to state 20

    statement_list                 shift and go to state 110
    var_declaration                shift and go to state 111
    empty                          shift and go to state 112
    type_specifier                 shift and go to state 113

state 63

    (39) local_declarations -> empty .

    PUBLIC          reduce using rule 39 (local_declarations -> empty .)
    PRIVATE         reduce using rule 39 (local_declarations -> empty .)
    LLAVEDER        reduce using rule 39 (local_declarations -> empty .)
    PUNTOYCOMA      reduce using rule 39 (local_declarations -> empty .)
    PRINT           reduce using rule 39 (local_declarations -> empty .)
    LLAVEIZQ        reduce using rule 39 (local_declarations -> empty .)
    IF              reduce using rule 39 (local_declarations -> empty .)
    SWITCH          reduce using rule 39 (local_declarations -> empty .)
    CASE            reduce using rule 39 (local_declarations -> empty .)
    DEFAULT         reduce using rule 39 (local_declarations -> empty .)
    WHILE           reduce using rule 39 (local_declarations -> empty .)
    FOR             reduce using rule 39 (local_declarations -> empty .)
    DO              reduce using rule 39 (local_declarations -> empty .)
    RETURN          reduce using rule 39 (local_declarations -> empty .)
    CONTINUE        reduce using rule 39 (local_declarations -> empty .)
    NEW             reduce using rule 39 (local_declarations -> empty .)
    DOLAR           reduce using rule 39 (local_declarations -> empty .)
    AMPERSAND       reduce using rule 39 (local_declarations -> empty .)
    CONST           reduce using rule 39 (local_declarations -> empty .)
    PARENIZQUIERDA  reduce using rule 39 (local_declarations -> empty .)
    NUMERO          reduce using rule 39 (local_declarations -> empty .)


state 64

    (57) iteration_stmt -> WHILE PARENIZQUIERDA . expression PARENDERECHA statement
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 114
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 65

    (52) selection_stmt -> IF PARENIZQUIERDA . expression PARENDERECHA statement
    (53) selection_stmt -> IF PARENIZQUIERDA . expression PARENDERECHA statement ELSE statement
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 115
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 66

    (54) selection_stmt -> SWITCH PARENIZQUIERDA . var_declaration2 PARENDERECHA statement
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO

    DOLAR           shift and go to state 117
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    var_declaration2               shift and go to state 116

state 67

    (55) selection_stmt -> CASE NUMERO . DOSPUNTOS statement BREAK PUNTOYCOMA

    DOSPUNTOS       shift and go to state 118


state 68

    (56) selection_stmt -> DEFAULT DOSPUNTOS . statement BREAK PUNTOYCOMA
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    statement                      shift and go to state 119
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    expression                     shift and go to state 28
    var_declaration2               shift and go to state 10
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 69

    (58) iteration_stmt -> FOR PARENIZQUIERDA . var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO

    DOLAR           shift and go to state 117
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    var_declaration2               shift and go to state 120

state 70

    (81) simple_expression -> additive_expression relop . additive_expression
    (82) simple_expression -> additive_expression relop . additive_expression relop additive_expression
    (83) simple_expression -> additive_expression relop . additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> additive_expression relop . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    additive_expression            shift and go to state 121
    term                           shift and go to state 45
    factor                         shift and go to state 46
    var_declaration2               shift and go to state 122
    call                           shift and go to state 47

state 71

    (95) additive_expression -> additive_expression addop . term
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    term                           shift and go to state 123
    factor                         shift and go to state 46
    var_declaration2               shift and go to state 122
    call                           shift and go to state 47

state 72

    (86) relop -> MENORQ .

    PARENIZQUIERDA  reduce using rule 86 (relop -> MENORQ .)
    NUMERO          reduce using rule 86 (relop -> MENORQ .)
    DOLAR           reduce using rule 86 (relop -> MENORQ .)
    AMPERSAND       reduce using rule 86 (relop -> MENORQ .)
    CONST           reduce using rule 86 (relop -> MENORQ .)


state 73

    (87) relop -> MAYORQ .

    PARENIZQUIERDA  reduce using rule 87 (relop -> MAYORQ .)
    NUMERO          reduce using rule 87 (relop -> MAYORQ .)
    DOLAR           reduce using rule 87 (relop -> MAYORQ .)
    AMPERSAND       reduce using rule 87 (relop -> MAYORQ .)
    CONST           reduce using rule 87 (relop -> MAYORQ .)


state 74

    (88) relop -> DIFERENTE .

    PARENIZQUIERDA  reduce using rule 88 (relop -> DIFERENTE .)
    NUMERO          reduce using rule 88 (relop -> DIFERENTE .)
    DOLAR           reduce using rule 88 (relop -> DIFERENTE .)
    AMPERSAND       reduce using rule 88 (relop -> DIFERENTE .)
    CONST           reduce using rule 88 (relop -> DIFERENTE .)


state 75

    (89) relop -> LOGNEGACION .

    PARENIZQUIERDA  reduce using rule 89 (relop -> LOGNEGACION .)
    NUMERO          reduce using rule 89 (relop -> LOGNEGACION .)
    DOLAR           reduce using rule 89 (relop -> LOGNEGACION .)
    AMPERSAND       reduce using rule 89 (relop -> LOGNEGACION .)
    CONST           reduce using rule 89 (relop -> LOGNEGACION .)


state 76

    (90) relop -> IQUALIQUAL .

    PARENIZQUIERDA  reduce using rule 90 (relop -> IQUALIQUAL .)
    NUMERO          reduce using rule 90 (relop -> IQUALIQUAL .)
    DOLAR           reduce using rule 90 (relop -> IQUALIQUAL .)
    AMPERSAND       reduce using rule 90 (relop -> IQUALIQUAL .)
    CONST           reduce using rule 90 (relop -> IQUALIQUAL .)


state 77

    (91) relop -> LOGOR .

    PARENIZQUIERDA  reduce using rule 91 (relop -> LOGOR .)
    NUMERO          reduce using rule 91 (relop -> LOGOR .)
    DOLAR           reduce using rule 91 (relop -> LOGOR .)
    AMPERSAND       reduce using rule 91 (relop -> LOGOR .)
    CONST           reduce using rule 91 (relop -> LOGOR .)


state 78

    (92) relop -> LOGXOR .

    PARENIZQUIERDA  reduce using rule 92 (relop -> LOGXOR .)
    NUMERO          reduce using rule 92 (relop -> LOGXOR .)
    DOLAR           reduce using rule 92 (relop -> LOGXOR .)
    AMPERSAND       reduce using rule 92 (relop -> LOGXOR .)
    CONST           reduce using rule 92 (relop -> LOGXOR .)


state 79

    (93) relop -> LOGAND .

    PARENIZQUIERDA  reduce using rule 93 (relop -> LOGAND .)
    NUMERO          reduce using rule 93 (relop -> LOGAND .)
    DOLAR           reduce using rule 93 (relop -> LOGAND .)
    AMPERSAND       reduce using rule 93 (relop -> LOGAND .)
    CONST           reduce using rule 93 (relop -> LOGAND .)


state 80

    (94) relop -> LOGY .

    PARENIZQUIERDA  reduce using rule 94 (relop -> LOGY .)
    NUMERO          reduce using rule 94 (relop -> LOGY .)
    DOLAR           reduce using rule 94 (relop -> LOGY .)
    AMPERSAND       reduce using rule 94 (relop -> LOGY .)
    CONST           reduce using rule 94 (relop -> LOGY .)


state 81

    (99) addop -> PLUS .

    PARENIZQUIERDA  reduce using rule 99 (addop -> PLUS .)
    NUMERO          reduce using rule 99 (addop -> PLUS .)
    DOLAR           reduce using rule 99 (addop -> PLUS .)
    AMPERSAND       reduce using rule 99 (addop -> PLUS .)
    CONST           reduce using rule 99 (addop -> PLUS .)


state 82

    (100) addop -> MINUS .

    PARENIZQUIERDA  reduce using rule 100 (addop -> MINUS .)
    NUMERO          reduce using rule 100 (addop -> MINUS .)
    DOLAR           reduce using rule 100 (addop -> MINUS .)
    AMPERSAND       reduce using rule 100 (addop -> MINUS .)
    CONST           reduce using rule 100 (addop -> MINUS .)


state 83

    (59) iteration_stmt -> DO statement .

    INICIO          reduce using rule 59 (iteration_stmt -> DO statement .)
    CLASS           reduce using rule 59 (iteration_stmt -> DO statement .)
    PUBLIC          reduce using rule 59 (iteration_stmt -> DO statement .)
    PRIVATE         reduce using rule 59 (iteration_stmt -> DO statement .)
    PUNTOYCOMA      reduce using rule 59 (iteration_stmt -> DO statement .)
    PRINT           reduce using rule 59 (iteration_stmt -> DO statement .)
    LLAVEIZQ        reduce using rule 59 (iteration_stmt -> DO statement .)
    IF              reduce using rule 59 (iteration_stmt -> DO statement .)
    SWITCH          reduce using rule 59 (iteration_stmt -> DO statement .)
    CASE            reduce using rule 59 (iteration_stmt -> DO statement .)
    DEFAULT         reduce using rule 59 (iteration_stmt -> DO statement .)
    WHILE           reduce using rule 59 (iteration_stmt -> DO statement .)
    FOR             reduce using rule 59 (iteration_stmt -> DO statement .)
    DO              reduce using rule 59 (iteration_stmt -> DO statement .)
    RETURN          reduce using rule 59 (iteration_stmt -> DO statement .)
    CONTINUE        reduce using rule 59 (iteration_stmt -> DO statement .)
    NEW             reduce using rule 59 (iteration_stmt -> DO statement .)
    DOLAR           reduce using rule 59 (iteration_stmt -> DO statement .)
    AMPERSAND       reduce using rule 59 (iteration_stmt -> DO statement .)
    CONST           reduce using rule 59 (iteration_stmt -> DO statement .)
    PARENIZQUIERDA  reduce using rule 59 (iteration_stmt -> DO statement .)
    NUMERO          reduce using rule 59 (iteration_stmt -> DO statement .)
    $end            reduce using rule 59 (iteration_stmt -> DO statement .)
    FIN             reduce using rule 59 (iteration_stmt -> DO statement .)
    BREAK           reduce using rule 59 (iteration_stmt -> DO statement .)
    LLAVEDER        reduce using rule 59 (iteration_stmt -> DO statement .)
    ELSE            reduce using rule 59 (iteration_stmt -> DO statement .)


state 84

    (60) return_stmt -> RETURN PUNTOYCOMA .

    INICIO          reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    CLASS           reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    PUBLIC          reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    PRIVATE         reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    PRINT           reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    IF              reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    SWITCH          reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    CASE            reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    DEFAULT         reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    WHILE           reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    FOR             reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    DO              reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    RETURN          reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    CONTINUE        reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    NEW             reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    DOLAR           reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    AMPERSAND       reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    CONST           reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    NUMERO          reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    $end            reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    FIN             reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    BREAK           reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    LLAVEDER        reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)
    ELSE            reduce using rule 60 (return_stmt -> RETURN PUNTOYCOMA .)


state 85

    (61) return_stmt -> RETURN expression . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 124


state 86

    (62) continue_stmt -> CONTINUE PUNTOYCOMA .

    INICIO          reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    CLASS           reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    PUBLIC          reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    PRIVATE         reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    PRINT           reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    IF              reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    SWITCH          reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    CASE            reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    DEFAULT         reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    WHILE           reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    FOR             reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    DO              reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    RETURN          reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    CONTINUE        reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    NEW             reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    DOLAR           reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    AMPERSAND       reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    CONST           reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    NUMERO          reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    $end            reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    FIN             reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    BREAK           reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    LLAVEDER        reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)
    ELSE            reduce using rule 62 (continue_stmt -> CONTINUE PUNTOYCOMA .)


state 87

    (63) object_stmt -> NEW DOLAR . IDENTIFICADOR IGUAL IDENTIFICADOR argumento

    IDENTIFICADOR   shift and go to state 125


state 88

    (23) var_declaration2 -> CONST IDENTIFICADOR . IGUAL NUMERO

    IGUAL           shift and go to state 126


state 89

    (97) additive_expression -> term MINUSMINUS .

    MENORQ          reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    MAYORQ          reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    DIFERENTE       reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    LOGNEGACION     reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    IQUALIQUAL      reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    LOGOR           reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    LOGXOR          reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    LOGAND          reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    LOGY            reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    PLUS            reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    MINUS           reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    PUNTOYCOMA      reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    PARENDERECHA    reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    COMA            reduce using rule 97 (additive_expression -> term MINUSMINUS .)
    PUNTO           reduce using rule 97 (additive_expression -> term MINUSMINUS .)


state 90

    (98) additive_expression -> term PLUSPLUS .

    MENORQ          reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    MAYORQ          reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    DIFERENTE       reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    LOGNEGACION     reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    IQUALIQUAL      reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    LOGOR           reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    LOGXOR          reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    LOGAND          reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    LOGY            reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    PLUS            reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    MINUS           reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    PUNTOYCOMA      reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    PARENDERECHA    reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    COMA            reduce using rule 98 (additive_expression -> term PLUSPLUS .)
    PUNTO           reduce using rule 98 (additive_expression -> term PLUSPLUS .)


state 91

    (101) term -> term mulop . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    factor                         shift and go to state 127
    var_declaration2               shift and go to state 122
    call                           shift and go to state 47

state 92

    (103) mulop -> MULTI .

    PARENIZQUIERDA  reduce using rule 103 (mulop -> MULTI .)
    NUMERO          reduce using rule 103 (mulop -> MULTI .)
    DOLAR           reduce using rule 103 (mulop -> MULTI .)
    AMPERSAND       reduce using rule 103 (mulop -> MULTI .)
    CONST           reduce using rule 103 (mulop -> MULTI .)


state 93

    (104) mulop -> DIVIDE .

    PARENIZQUIERDA  reduce using rule 104 (mulop -> DIVIDE .)
    NUMERO          reduce using rule 104 (mulop -> DIVIDE .)
    DOLAR           reduce using rule 104 (mulop -> DIVIDE .)
    AMPERSAND       reduce using rule 104 (mulop -> DIVIDE .)
    CONST           reduce using rule 104 (mulop -> DIVIDE .)


state 94

    (15) var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .

    INICIO          reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    CLASS           reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    PUBLIC          reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    PRIVATE         reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    PRINT           reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    IF              reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    SWITCH          reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    CASE            reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    DEFAULT         reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    WHILE           reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    FOR             reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    DO              reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    RETURN          reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    CONTINUE        reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    NEW             reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    DOLAR           reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    AMPERSAND       reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    CONST           reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    NUMERO          reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    $end            reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    FIN             reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)
    LLAVEDER        reduce using rule 15 (var_declaration -> type_specifier var_declaration2 PUNTOYCOMA .)


state 95

    (16) var_declaration -> type_specifier DOLAR IDENTIFICADOR . CORCHIZQ CORCHDER PUNTOYCOMA
    (17) var_declaration2 -> DOLAR IDENTIFICADOR . COMA var_declaration2
    (18) var_declaration2 -> DOLAR IDENTIFICADOR .
    (19) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NUMERO
    (22) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NULL

    CORCHIZQ        shift and go to state 128
    COMA            shift and go to state 99
    PUNTOYCOMA      reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    IGUAL           shift and go to state 100


state 96

    (27) fun_declaration -> type_specifier type_function FUNCTION . IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> type_specifier type_function FUNCTION . AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt

    IDENTIFICADOR   shift and go to state 129
    AMPERSAND       shift and go to state 130


state 97

    (80) expression -> var_declaration2 IGUAL var_declaration2 . PUNTOYCOMA
    (78) expression -> var_declaration2 . IGUAL expression
    (80) expression -> var_declaration2 . IGUAL var_declaration2 PUNTOYCOMA
    (106) factor -> var_declaration2 .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
    PUNTOYCOMA      shift and go to state 131
    IGUAL           shift and go to state 54
    MINUSMINUS      reduce using rule 106 (factor -> var_declaration2 .)
    PLUSPLUS        reduce using rule 106 (factor -> var_declaration2 .)
    MULTI           reduce using rule 106 (factor -> var_declaration2 .)
    DIVIDE          reduce using rule 106 (factor -> var_declaration2 .)
    MENORQ          reduce using rule 106 (factor -> var_declaration2 .)
    MAYORQ          reduce using rule 106 (factor -> var_declaration2 .)
    DIFERENTE       reduce using rule 106 (factor -> var_declaration2 .)
    LOGNEGACION     reduce using rule 106 (factor -> var_declaration2 .)
    IQUALIQUAL      reduce using rule 106 (factor -> var_declaration2 .)
    LOGOR           reduce using rule 106 (factor -> var_declaration2 .)
    LOGXOR          reduce using rule 106 (factor -> var_declaration2 .)
    LOGAND          reduce using rule 106 (factor -> var_declaration2 .)
    LOGY            reduce using rule 106 (factor -> var_declaration2 .)
    PLUS            reduce using rule 106 (factor -> var_declaration2 .)
    MINUS           reduce using rule 106 (factor -> var_declaration2 .)
    PARENDERECHA    reduce using rule 106 (factor -> var_declaration2 .)
    COMA            reduce using rule 106 (factor -> var_declaration2 .)
    PUNTO           reduce using rule 106 (factor -> var_declaration2 .)

  ! PUNTOYCOMA      [ reduce using rule 106 (factor -> var_declaration2 .) ]


state 98

    (78) expression -> var_declaration2 IGUAL expression .

    PUNTOYCOMA      reduce using rule 78 (expression -> var_declaration2 IGUAL expression .)
    PARENDERECHA    reduce using rule 78 (expression -> var_declaration2 IGUAL expression .)
    COMA            reduce using rule 78 (expression -> var_declaration2 IGUAL expression .)
    PUNTO           reduce using rule 78 (expression -> var_declaration2 IGUAL expression .)


state 99

    (17) var_declaration2 -> DOLAR IDENTIFICADOR COMA . var_declaration2
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO

    DOLAR           shift and go to state 117
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    var_declaration2               shift and go to state 132

state 100

    (19) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL . NUMERO COMA var_declaration2
    (20) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL . NUMERO
    (22) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL . NULL

    NUMERO          shift and go to state 133
    NULL            shift and go to state 134


state 101

    (109) call -> DOLAR IDENTIFICADOR PARENIZQUIERDA . args PARENDERECHA
    (110) args -> . args_list
    (111) args -> . empty
    (112) args_list -> . args_list COMA expression
    (113) args_list -> . expression
    (114) empty -> .
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENDERECHA    reduce using rule 114 (empty -> .)
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    args                           shift and go to state 135
    args_list                      shift and go to state 136
    empty                          shift and go to state 137
    expression                     shift and go to state 138
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 102

    (105) factor -> PARENIZQUIERDA expression PARENDERECHA .

    MINUSMINUS      reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    PLUSPLUS        reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    MULTI           reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    DIVIDE          reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    MENORQ          reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    MAYORQ          reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    DIFERENTE       reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    LOGNEGACION     reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    IQUALIQUAL      reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    LOGOR           reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    LOGXOR          reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    LOGAND          reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    LOGY            reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    PLUS            reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    MINUS           reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    PUNTOYCOMA      reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    PARENDERECHA    reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    COMA            reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)
    PUNTO           reduce using rule 105 (factor -> PARENIZQUIERDA expression PARENDERECHA .)


state 103

    (14) header_declaration -> INICIO program FIN .

    INICIO          reduce using rule 14 (header_declaration -> INICIO program FIN .)
    CLASS           reduce using rule 14 (header_declaration -> INICIO program FIN .)
    PUBLIC          reduce using rule 14 (header_declaration -> INICIO program FIN .)
    PRIVATE         reduce using rule 14 (header_declaration -> INICIO program FIN .)
    PUNTOYCOMA      reduce using rule 14 (header_declaration -> INICIO program FIN .)
    PRINT           reduce using rule 14 (header_declaration -> INICIO program FIN .)
    LLAVEIZQ        reduce using rule 14 (header_declaration -> INICIO program FIN .)
    IF              reduce using rule 14 (header_declaration -> INICIO program FIN .)
    SWITCH          reduce using rule 14 (header_declaration -> INICIO program FIN .)
    CASE            reduce using rule 14 (header_declaration -> INICIO program FIN .)
    DEFAULT         reduce using rule 14 (header_declaration -> INICIO program FIN .)
    WHILE           reduce using rule 14 (header_declaration -> INICIO program FIN .)
    FOR             reduce using rule 14 (header_declaration -> INICIO program FIN .)
    DO              reduce using rule 14 (header_declaration -> INICIO program FIN .)
    RETURN          reduce using rule 14 (header_declaration -> INICIO program FIN .)
    CONTINUE        reduce using rule 14 (header_declaration -> INICIO program FIN .)
    NEW             reduce using rule 14 (header_declaration -> INICIO program FIN .)
    DOLAR           reduce using rule 14 (header_declaration -> INICIO program FIN .)
    AMPERSAND       reduce using rule 14 (header_declaration -> INICIO program FIN .)
    CONST           reduce using rule 14 (header_declaration -> INICIO program FIN .)
    PARENIZQUIERDA  reduce using rule 14 (header_declaration -> INICIO program FIN .)
    NUMERO          reduce using rule 14 (header_declaration -> INICIO program FIN .)
    $end            reduce using rule 14 (header_declaration -> INICIO program FIN .)
    FIN             reduce using rule 14 (header_declaration -> INICIO program FIN .)


state 104

    (11) bloque_declaration -> CLASS . IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration

    IDENTIFICADOR   shift and go to state 139


state 105

    (9) class_declaration -> CLASS IDENTIFICADOR bloque_declaration .

    INICIO          reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    CLASS           reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    PUBLIC          reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    PRIVATE         reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    PUNTOYCOMA      reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    PRINT           reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    LLAVEIZQ        reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    IF              reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    SWITCH          reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    CASE            reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    DEFAULT         reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    WHILE           reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    FOR             reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    DO              reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    RETURN          reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    CONTINUE        reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    NEW             reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    DOLAR           reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    AMPERSAND       reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    CONST           reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    PARENIZQUIERDA  reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    NUMERO          reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    $end            reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)
    FIN             reduce using rule 9 (class_declaration -> CLASS IDENTIFICADOR bloque_declaration .)


state 106

    (10) bloque_declaration -> LLAVEIZQ . bloque_declaration_2 LLAVEDER
    (12) bloque_declaration_2 -> . fun_declaration bloque_declaration_2
    (13) bloque_declaration_2 -> . fun_declaration
    (27) fun_declaration -> . type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> . type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (24) type_specifier -> . PUBLIC
    (25) type_specifier -> . PRIVATE

    PUBLIC          shift and go to state 19
    PRIVATE         shift and go to state 20

    bloque_declaration_2           shift and go to state 140
    fun_declaration                shift and go to state 141
    type_specifier                 shift and go to state 142

state 107

    (71) imprimir_pantalla -> PRINT COMILLA CADENA . COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> PRINT COMILLA CADENA . COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> PRINT COMILLA CADENA . COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA

    COMILLA         shift and go to state 143


state 108

    (74) CADENA -> IDENTIFICADOR . CADENA
    (77) CADENA -> IDENTIFICADOR .
    (74) CADENA -> . IDENTIFICADOR CADENA
    (75) CADENA -> . NUMERO CADENA
    (76) CADENA -> . NUMERO
    (77) CADENA -> . IDENTIFICADOR

    COMILLA         reduce using rule 77 (CADENA -> IDENTIFICADOR .)
    IDENTIFICADOR   shift and go to state 108
    NUMERO          shift and go to state 109

    CADENA                         shift and go to state 144

state 109

    (75) CADENA -> NUMERO . CADENA
    (76) CADENA -> NUMERO .
    (74) CADENA -> . IDENTIFICADOR CADENA
    (75) CADENA -> . NUMERO CADENA
    (76) CADENA -> . NUMERO
    (77) CADENA -> . IDENTIFICADOR

    COMILLA         reduce using rule 76 (CADENA -> NUMERO .)
    IDENTIFICADOR   shift and go to state 108
    NUMERO          shift and go to state 109

    CADENA                         shift and go to state 145

state 110

    (36) compount_stmt -> LLAVEIZQ local_declarations statement_list . LLAVEDER
    (37) compount_stmt -> LLAVEIZQ local_declarations statement_list . LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (40) statement_list -> statement_list . statement
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    LLAVEDER        shift and go to state 146
    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 28
    statement                      shift and go to state 147
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    var_declaration2               shift and go to state 10
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 111

    (38) local_declarations -> local_declarations var_declaration .

    PUBLIC          reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    PRIVATE         reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    LLAVEDER        reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    PUNTOYCOMA      reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    PRINT           reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    LLAVEIZQ        reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    IF              reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    SWITCH          reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    CASE            reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    DEFAULT         reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    WHILE           reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    FOR             reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    DO              reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    RETURN          reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    CONTINUE        reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    NEW             reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    DOLAR           reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    AMPERSAND       reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    CONST           reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    PARENIZQUIERDA  reduce using rule 38 (local_declarations -> local_declarations var_declaration .)
    NUMERO          reduce using rule 38 (local_declarations -> local_declarations var_declaration .)


state 112

    (41) statement_list -> empty .

    LLAVEDER        reduce using rule 41 (statement_list -> empty .)
    PUNTOYCOMA      reduce using rule 41 (statement_list -> empty .)
    PRINT           reduce using rule 41 (statement_list -> empty .)
    LLAVEIZQ        reduce using rule 41 (statement_list -> empty .)
    IF              reduce using rule 41 (statement_list -> empty .)
    SWITCH          reduce using rule 41 (statement_list -> empty .)
    CASE            reduce using rule 41 (statement_list -> empty .)
    DEFAULT         reduce using rule 41 (statement_list -> empty .)
    WHILE           reduce using rule 41 (statement_list -> empty .)
    FOR             reduce using rule 41 (statement_list -> empty .)
    DO              reduce using rule 41 (statement_list -> empty .)
    RETURN          reduce using rule 41 (statement_list -> empty .)
    CONTINUE        reduce using rule 41 (statement_list -> empty .)
    NEW             reduce using rule 41 (statement_list -> empty .)
    DOLAR           reduce using rule 41 (statement_list -> empty .)
    AMPERSAND       reduce using rule 41 (statement_list -> empty .)
    CONST           reduce using rule 41 (statement_list -> empty .)
    PARENIZQUIERDA  reduce using rule 41 (statement_list -> empty .)
    NUMERO          reduce using rule 41 (statement_list -> empty .)


state 113

    (15) var_declaration -> type_specifier . var_declaration2 PUNTOYCOMA
    (16) var_declaration -> type_specifier . DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO

    DOLAR           shift and go to state 50
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    var_declaration2               shift and go to state 49

state 114

    (57) iteration_stmt -> WHILE PARENIZQUIERDA expression . PARENDERECHA statement

    PARENDERECHA    shift and go to state 148


state 115

    (52) selection_stmt -> IF PARENIZQUIERDA expression . PARENDERECHA statement
    (53) selection_stmt -> IF PARENIZQUIERDA expression . PARENDERECHA statement ELSE statement

    PARENDERECHA    shift and go to state 149


state 116

    (54) selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 . PARENDERECHA statement

    PARENDERECHA    shift and go to state 150


state 117

    (17) var_declaration2 -> DOLAR . IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> DOLAR . IDENTIFICADOR
    (19) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NUMERO
    (22) var_declaration2 -> DOLAR . IDENTIFICADOR IGUAL NULL

    IDENTIFICADOR   shift and go to state 151


state 118

    (55) selection_stmt -> CASE NUMERO DOSPUNTOS . statement BREAK PUNTOYCOMA
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    statement                      shift and go to state 152
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    expression                     shift and go to state 28
    var_declaration2               shift and go to state 10
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 119

    (56) selection_stmt -> DEFAULT DOSPUNTOS statement . BREAK PUNTOYCOMA

    BREAK           shift and go to state 153


state 120

    (58) iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 . PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement

    PUNTOYCOMA      shift and go to state 154


state 121

    (81) simple_expression -> additive_expression relop additive_expression .
    (82) simple_expression -> additive_expression relop additive_expression . relop additive_expression
    (83) simple_expression -> additive_expression relop additive_expression . relop additive_expression relop additive_expression
    (84) simple_expression -> additive_expression relop additive_expression . relop additive_expression relop additive_expression relop additive_expression
    (95) additive_expression -> additive_expression . addop term
    (86) relop -> . MENORQ
    (87) relop -> . MAYORQ
    (88) relop -> . DIFERENTE
    (89) relop -> . LOGNEGACION
    (90) relop -> . IQUALIQUAL
    (91) relop -> . LOGOR
    (92) relop -> . LOGXOR
    (93) relop -> . LOGAND
    (94) relop -> . LOGY
    (99) addop -> . PLUS
    (100) addop -> . MINUS

    PUNTOYCOMA      reduce using rule 81 (simple_expression -> additive_expression relop additive_expression .)
    PARENDERECHA    reduce using rule 81 (simple_expression -> additive_expression relop additive_expression .)
    COMA            reduce using rule 81 (simple_expression -> additive_expression relop additive_expression .)
    PUNTO           reduce using rule 81 (simple_expression -> additive_expression relop additive_expression .)
    MENORQ          shift and go to state 72
    MAYORQ          shift and go to state 73
    DIFERENTE       shift and go to state 74
    LOGNEGACION     shift and go to state 75
    IQUALIQUAL      shift and go to state 76
    LOGOR           shift and go to state 77
    LOGXOR          shift and go to state 78
    LOGAND          shift and go to state 79
    LOGY            shift and go to state 80
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

    relop                          shift and go to state 155
    addop                          shift and go to state 71

state 122

    (106) factor -> var_declaration2 .

    MINUSMINUS      reduce using rule 106 (factor -> var_declaration2 .)
    PLUSPLUS        reduce using rule 106 (factor -> var_declaration2 .)
    MULTI           reduce using rule 106 (factor -> var_declaration2 .)
    DIVIDE          reduce using rule 106 (factor -> var_declaration2 .)
    MENORQ          reduce using rule 106 (factor -> var_declaration2 .)
    MAYORQ          reduce using rule 106 (factor -> var_declaration2 .)
    DIFERENTE       reduce using rule 106 (factor -> var_declaration2 .)
    LOGNEGACION     reduce using rule 106 (factor -> var_declaration2 .)
    IQUALIQUAL      reduce using rule 106 (factor -> var_declaration2 .)
    LOGOR           reduce using rule 106 (factor -> var_declaration2 .)
    LOGXOR          reduce using rule 106 (factor -> var_declaration2 .)
    LOGAND          reduce using rule 106 (factor -> var_declaration2 .)
    LOGY            reduce using rule 106 (factor -> var_declaration2 .)
    PLUS            reduce using rule 106 (factor -> var_declaration2 .)
    MINUS           reduce using rule 106 (factor -> var_declaration2 .)
    PUNTOYCOMA      reduce using rule 106 (factor -> var_declaration2 .)
    PARENDERECHA    reduce using rule 106 (factor -> var_declaration2 .)
    COMA            reduce using rule 106 (factor -> var_declaration2 .)
    PUNTO           reduce using rule 106 (factor -> var_declaration2 .)


state 123

    (95) additive_expression -> additive_expression addop term .
    (101) term -> term . mulop factor
    (103) mulop -> . MULTI
    (104) mulop -> . DIVIDE

    MENORQ          reduce using rule 95 (additive_expression -> additive_expression addop term .)
    MAYORQ          reduce using rule 95 (additive_expression -> additive_expression addop term .)
    DIFERENTE       reduce using rule 95 (additive_expression -> additive_expression addop term .)
    LOGNEGACION     reduce using rule 95 (additive_expression -> additive_expression addop term .)
    IQUALIQUAL      reduce using rule 95 (additive_expression -> additive_expression addop term .)
    LOGOR           reduce using rule 95 (additive_expression -> additive_expression addop term .)
    LOGXOR          reduce using rule 95 (additive_expression -> additive_expression addop term .)
    LOGAND          reduce using rule 95 (additive_expression -> additive_expression addop term .)
    LOGY            reduce using rule 95 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 95 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 95 (additive_expression -> additive_expression addop term .)
    PUNTOYCOMA      reduce using rule 95 (additive_expression -> additive_expression addop term .)
    PARENDERECHA    reduce using rule 95 (additive_expression -> additive_expression addop term .)
    COMA            reduce using rule 95 (additive_expression -> additive_expression addop term .)
    PUNTO           reduce using rule 95 (additive_expression -> additive_expression addop term .)
    MULTI           shift and go to state 92
    DIVIDE          shift and go to state 93

    mulop                          shift and go to state 91

state 124

    (61) return_stmt -> RETURN expression PUNTOYCOMA .

    INICIO          reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    CLASS           reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    PUBLIC          reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    PRIVATE         reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    PRINT           reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    IF              reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    SWITCH          reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    CASE            reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    DEFAULT         reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    WHILE           reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    FOR             reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    DO              reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    RETURN          reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    CONTINUE        reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    NEW             reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    DOLAR           reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    AMPERSAND       reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    CONST           reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    NUMERO          reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    $end            reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    FIN             reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    BREAK           reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    LLAVEDER        reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)
    ELSE            reduce using rule 61 (return_stmt -> RETURN expression PUNTOYCOMA .)


state 125

    (63) object_stmt -> NEW DOLAR IDENTIFICADOR . IGUAL IDENTIFICADOR argumento

    IGUAL           shift and go to state 156


state 126

    (23) var_declaration2 -> CONST IDENTIFICADOR IGUAL . NUMERO

    NUMERO          shift and go to state 157


state 127

    (101) term -> term mulop factor .

    MINUSMINUS      reduce using rule 101 (term -> term mulop factor .)
    PLUSPLUS        reduce using rule 101 (term -> term mulop factor .)
    MULTI           reduce using rule 101 (term -> term mulop factor .)
    DIVIDE          reduce using rule 101 (term -> term mulop factor .)
    MENORQ          reduce using rule 101 (term -> term mulop factor .)
    MAYORQ          reduce using rule 101 (term -> term mulop factor .)
    DIFERENTE       reduce using rule 101 (term -> term mulop factor .)
    LOGNEGACION     reduce using rule 101 (term -> term mulop factor .)
    IQUALIQUAL      reduce using rule 101 (term -> term mulop factor .)
    LOGOR           reduce using rule 101 (term -> term mulop factor .)
    LOGXOR          reduce using rule 101 (term -> term mulop factor .)
    LOGAND          reduce using rule 101 (term -> term mulop factor .)
    LOGY            reduce using rule 101 (term -> term mulop factor .)
    PLUS            reduce using rule 101 (term -> term mulop factor .)
    MINUS           reduce using rule 101 (term -> term mulop factor .)
    PUNTOYCOMA      reduce using rule 101 (term -> term mulop factor .)
    PARENDERECHA    reduce using rule 101 (term -> term mulop factor .)
    COMA            reduce using rule 101 (term -> term mulop factor .)
    PUNTO           reduce using rule 101 (term -> term mulop factor .)


state 128

    (16) var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ . CORCHDER PUNTOYCOMA

    CORCHDER        shift and go to state 158


state 129

    (27) fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR . PARENIZQUIERDA params PARENDERECHA compount_stmt

    PARENIZQUIERDA  shift and go to state 159


state 130

    (28) fun_declaration -> type_specifier type_function FUNCTION AMPERSAND . IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt

    IDENTIFICADOR   shift and go to state 160


state 131

    (80) expression -> var_declaration2 IGUAL var_declaration2 PUNTOYCOMA .

    PUNTOYCOMA      reduce using rule 80 (expression -> var_declaration2 IGUAL var_declaration2 PUNTOYCOMA .)
    PARENDERECHA    reduce using rule 80 (expression -> var_declaration2 IGUAL var_declaration2 PUNTOYCOMA .)
    COMA            reduce using rule 80 (expression -> var_declaration2 IGUAL var_declaration2 PUNTOYCOMA .)
    PUNTO           reduce using rule 80 (expression -> var_declaration2 IGUAL var_declaration2 PUNTOYCOMA .)


state 132

    (17) var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .

    IGUAL           reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    MINUSMINUS      reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    PLUSPLUS        reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    MULTI           reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    DIVIDE          reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    MENORQ          reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    MAYORQ          reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    DIFERENTE       reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    LOGNEGACION     reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    IQUALIQUAL      reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    LOGOR           reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    LOGXOR          reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    LOGAND          reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    LOGY            reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    PLUS            reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    MINUS           reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    PUNTOYCOMA      reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    PARENDERECHA    reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    COMA            reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)
    PUNTO           reduce using rule 17 (var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2 .)


state 133

    (19) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO . COMA var_declaration2
    (20) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .

  ! shift/reduce conflict for COMA resolved as shift
    COMA            shift and go to state 161
    IGUAL           reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    MINUSMINUS      reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    PLUSPLUS        reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    MULTI           reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    DIVIDE          reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    MENORQ          reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    MAYORQ          reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    DIFERENTE       reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    LOGNEGACION     reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    IQUALIQUAL      reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    LOGOR           reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    LOGXOR          reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    LOGAND          reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    LOGY            reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    PLUS            reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    MINUS           reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    PUNTOYCOMA      reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    PARENDERECHA    reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)
    PUNTO           reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .)

  ! COMA            [ reduce using rule 20 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO .) ]


state 134

    (22) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .

    IGUAL           reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    MINUSMINUS      reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    PLUSPLUS        reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    MULTI           reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    DIVIDE          reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    MENORQ          reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    MAYORQ          reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    DIFERENTE       reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    LOGNEGACION     reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    IQUALIQUAL      reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    LOGOR           reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    LOGXOR          reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    LOGAND          reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    LOGY            reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    PLUS            reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    MINUS           reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    PUNTOYCOMA      reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    PARENDERECHA    reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    COMA            reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)
    PUNTO           reduce using rule 22 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL .)


state 135

    (109) call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args . PARENDERECHA

    PARENDERECHA    shift and go to state 162


state 136

    (110) args -> args_list .
    (112) args_list -> args_list . COMA expression

    PARENDERECHA    reduce using rule 110 (args -> args_list .)
    COMA            shift and go to state 163


state 137

    (111) args -> empty .

    PARENDERECHA    reduce using rule 111 (args -> empty .)


state 138

    (113) args_list -> expression .

    COMA            reduce using rule 113 (args_list -> expression .)
    PARENDERECHA    reduce using rule 113 (args_list -> expression .)


state 139

    (11) bloque_declaration -> CLASS IDENTIFICADOR . EXTENDS IDENTIFICADOR bloque_declaration

    EXTENDS         shift and go to state 164


state 140

    (10) bloque_declaration -> LLAVEIZQ bloque_declaration_2 . LLAVEDER

    LLAVEDER        shift and go to state 165


state 141

    (12) bloque_declaration_2 -> fun_declaration . bloque_declaration_2
    (13) bloque_declaration_2 -> fun_declaration .
    (12) bloque_declaration_2 -> . fun_declaration bloque_declaration_2
    (13) bloque_declaration_2 -> . fun_declaration
    (27) fun_declaration -> . type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> . type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (24) type_specifier -> . PUBLIC
    (25) type_specifier -> . PRIVATE

    LLAVEDER        reduce using rule 13 (bloque_declaration_2 -> fun_declaration .)
    PUBLIC          shift and go to state 19
    PRIVATE         shift and go to state 20

    fun_declaration                shift and go to state 141
    bloque_declaration_2           shift and go to state 166
    type_specifier                 shift and go to state 142

state 142

    (27) fun_declaration -> type_specifier . type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (28) fun_declaration -> type_specifier . type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt
    (29) type_function -> . STATIC
    (30) type_function -> . empty
    (114) empty -> .

    STATIC          shift and go to state 52
    FUNCTION        reduce using rule 114 (empty -> .)

    type_function                  shift and go to state 51
    empty                          shift and go to state 53

state 143

    (71) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA . PUNTOYCOMA
    (72) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA . PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA . PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 167
    PUNTO           shift and go to state 168


state 144

    (74) CADENA -> IDENTIFICADOR CADENA .

    COMILLA         reduce using rule 74 (CADENA -> IDENTIFICADOR CADENA .)


state 145

    (75) CADENA -> NUMERO CADENA .

    COMILLA         reduce using rule 75 (CADENA -> NUMERO CADENA .)


state 146

    (36) compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .
    (37) compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER . WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA

  ! shift/reduce conflict for WHILE resolved as shift
    INICIO          reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    CLASS           reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    PUBLIC          reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    PRIVATE         reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    PUNTOYCOMA      reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    PRINT           reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    LLAVEIZQ        reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    IF              reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    SWITCH          reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    CASE            reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    DEFAULT         reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    FOR             reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    DO              reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    RETURN          reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    CONTINUE        reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    NEW             reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    DOLAR           reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    AMPERSAND       reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    CONST           reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    PARENIZQUIERDA  reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    NUMERO          reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    $end            reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    FIN             reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    BREAK           reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    LLAVEDER        reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    ELSE            reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .)
    WHILE           shift and go to state 169

  ! WHILE           [ reduce using rule 36 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER .) ]


state 147

    (40) statement_list -> statement_list statement .

    LLAVEDER        reduce using rule 40 (statement_list -> statement_list statement .)
    PUNTOYCOMA      reduce using rule 40 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 40 (statement_list -> statement_list statement .)
    LLAVEIZQ        reduce using rule 40 (statement_list -> statement_list statement .)
    IF              reduce using rule 40 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 40 (statement_list -> statement_list statement .)
    CASE            reduce using rule 40 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 40 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 40 (statement_list -> statement_list statement .)
    FOR             reduce using rule 40 (statement_list -> statement_list statement .)
    DO              reduce using rule 40 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 40 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 40 (statement_list -> statement_list statement .)
    NEW             reduce using rule 40 (statement_list -> statement_list statement .)
    DOLAR           reduce using rule 40 (statement_list -> statement_list statement .)
    AMPERSAND       reduce using rule 40 (statement_list -> statement_list statement .)
    CONST           reduce using rule 40 (statement_list -> statement_list statement .)
    PARENIZQUIERDA  reduce using rule 40 (statement_list -> statement_list statement .)
    NUMERO          reduce using rule 40 (statement_list -> statement_list statement .)


state 148

    (57) iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA . statement
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 28
    statement                      shift and go to state 170
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    var_declaration2               shift and go to state 10
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 149

    (52) selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA . statement
    (53) selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA . statement ELSE statement
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 28
    statement                      shift and go to state 171
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    var_declaration2               shift and go to state 10
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 150

    (54) selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA . statement
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    var_declaration2               shift and go to state 10
    statement                      shift and go to state 172
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    expression                     shift and go to state 28
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 151

    (17) var_declaration2 -> DOLAR IDENTIFICADOR . COMA var_declaration2
    (18) var_declaration2 -> DOLAR IDENTIFICADOR .
    (19) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NUMERO
    (22) var_declaration2 -> DOLAR IDENTIFICADOR . IGUAL NULL

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
    COMA            shift and go to state 99
    PARENDERECHA    reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PUNTOYCOMA      reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MINUSMINUS      reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PLUSPLUS        reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MULTI           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    DIVIDE          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MENORQ          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MAYORQ          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    DIFERENTE       reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGNEGACION     reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    IQUALIQUAL      reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGOR           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGXOR          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGAND          reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    LOGY            reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PLUS            reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    MINUS           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    PUNTO           reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .)
    IGUAL           shift and go to state 100

  ! IGUAL           [ reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .) ]
  ! COMA            [ reduce using rule 18 (var_declaration2 -> DOLAR IDENTIFICADOR .) ]


state 152

    (55) selection_stmt -> CASE NUMERO DOSPUNTOS statement . BREAK PUNTOYCOMA

    BREAK           shift and go to state 173


state 153

    (56) selection_stmt -> DEFAULT DOSPUNTOS statement BREAK . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 174


state 154

    (58) iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA . expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    var_declaration2               shift and go to state 10
    expression                     shift and go to state 175
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 155

    (82) simple_expression -> additive_expression relop additive_expression relop . additive_expression
    (83) simple_expression -> additive_expression relop additive_expression relop . additive_expression relop additive_expression
    (84) simple_expression -> additive_expression relop additive_expression relop . additive_expression relop additive_expression relop additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    additive_expression            shift and go to state 176
    term                           shift and go to state 45
    factor                         shift and go to state 46
    var_declaration2               shift and go to state 122
    call                           shift and go to state 47

state 156

    (63) object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL . IDENTIFICADOR argumento

    IDENTIFICADOR   shift and go to state 177


state 157

    (23) var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .

    IGUAL           reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    MINUSMINUS      reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    PLUSPLUS        reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    MULTI           reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    DIVIDE          reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    MENORQ          reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    MAYORQ          reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    DIFERENTE       reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    LOGNEGACION     reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    IQUALIQUAL      reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    LOGOR           reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    LOGXOR          reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    LOGAND          reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    LOGY            reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    PLUS            reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    MINUS           reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    PUNTOYCOMA      reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    PARENDERECHA    reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    COMA            reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)
    PUNTO           reduce using rule 23 (var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO .)


state 158

    (16) var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 178


state 159

    (27) fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA . params PARENDERECHA compount_stmt
    (31) params -> . param_list
    (32) param_list -> . param_list COMA param
    (33) param_list -> . param
    (34) param_list -> . empty
    (35) param -> . DOLAR IDENTIFICADOR
    (114) empty -> .

    DOLAR           shift and go to state 183
    COMA            reduce using rule 114 (empty -> .)
    PARENDERECHA    reduce using rule 114 (empty -> .)

    params                         shift and go to state 179
    param_list                     shift and go to state 180
    param                          shift and go to state 181
    empty                          shift and go to state 182

state 160

    (28) fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR . PARENIZQUIERDA params PARENDERECHA compount_stmt

    PARENIZQUIERDA  shift and go to state 184


state 161

    (19) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA . var_declaration2
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO

    DOLAR           shift and go to state 117
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    var_declaration2               shift and go to state 185

state 162

    (109) call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .

    MINUSMINUS      reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    PLUSPLUS        reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    MULTI           reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    DIVIDE          reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    MENORQ          reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    MAYORQ          reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    DIFERENTE       reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    LOGNEGACION     reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    IQUALIQUAL      reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    LOGOR           reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    LOGXOR          reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    LOGAND          reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    LOGY            reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    PLUS            reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    MINUS           reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    PUNTOYCOMA      reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    PARENDERECHA    reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    COMA            reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)
    PUNTO           reduce using rule 109 (call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA .)


state 163

    (112) args_list -> args_list COMA . expression
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 186
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 164

    (11) bloque_declaration -> CLASS IDENTIFICADOR EXTENDS . IDENTIFICADOR bloque_declaration

    IDENTIFICADOR   shift and go to state 187


state 165

    (10) bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .

    INICIO          reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    CLASS           reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    PUBLIC          reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    PRIVATE         reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    PUNTOYCOMA      reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    PRINT           reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    LLAVEIZQ        reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    IF              reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    SWITCH          reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    CASE            reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    DEFAULT         reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    WHILE           reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    FOR             reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    DO              reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    RETURN          reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    CONTINUE        reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    NEW             reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    DOLAR           reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    AMPERSAND       reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    CONST           reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    PARENIZQUIERDA  reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    NUMERO          reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    $end            reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)
    FIN             reduce using rule 10 (bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER .)


state 166

    (12) bloque_declaration_2 -> fun_declaration bloque_declaration_2 .

    LLAVEDER        reduce using rule 12 (bloque_declaration_2 -> fun_declaration bloque_declaration_2 .)


state 167

    (71) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .

    INICIO          reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    CLASS           reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    PUBLIC          reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    PRIVATE         reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    PRINT           reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    IF              reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    SWITCH          reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    CASE            reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    DEFAULT         reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    WHILE           reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    FOR             reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    DO              reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    RETURN          reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    CONTINUE        reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    NEW             reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    DOLAR           reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    AMPERSAND       reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    CONST           reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    NUMERO          reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    $end            reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    FIN             reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    BREAK           reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    LLAVEDER        reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)
    ELSE            reduce using rule 71 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA .)


state 168

    (72) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO . expression PUNTOYCOMA
    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO . expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 188
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 169

    (37) compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE . PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA

    PARENIZQUIERDA  shift and go to state 189


state 170

    (57) iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .

    INICIO          reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    CLASS           reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    PUBLIC          reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    PRIVATE         reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    PUNTOYCOMA      reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    PRINT           reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    LLAVEIZQ        reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    IF              reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    SWITCH          reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    CASE            reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    DEFAULT         reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    WHILE           reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    FOR             reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    DO              reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    RETURN          reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    CONTINUE        reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    NEW             reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    DOLAR           reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    AMPERSAND       reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    CONST           reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    PARENIZQUIERDA  reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    NUMERO          reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    $end            reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    FIN             reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    BREAK           reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    LLAVEDER        reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)
    ELSE            reduce using rule 57 (iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement .)


state 171

    (52) selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .
    (53) selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    INICIO          reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    CLASS           reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    PUBLIC          reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    PRIVATE         reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    PUNTOYCOMA      reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    PRINT           reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    LLAVEIZQ        reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    IF              reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    SWITCH          reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    CASE            reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    DEFAULT         reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    WHILE           reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    FOR             reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    DO              reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    RETURN          reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    CONTINUE        reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    NEW             reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    DOLAR           reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    AMPERSAND       reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    CONST           reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    PARENIZQUIERDA  reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    NUMERO          reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    $end            reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    FIN             reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    BREAK           reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    LLAVEDER        reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .)
    ELSE            shift and go to state 190

  ! ELSE            [ reduce using rule 52 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement .) ]


state 172

    (54) selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .

    INICIO          reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    CLASS           reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    PUBLIC          reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    PRIVATE         reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    PUNTOYCOMA      reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    PRINT           reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    LLAVEIZQ        reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    IF              reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    SWITCH          reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    CASE            reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    DEFAULT         reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    WHILE           reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    FOR             reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    DO              reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    RETURN          reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    CONTINUE        reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    NEW             reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    DOLAR           reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    AMPERSAND       reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    CONST           reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    PARENIZQUIERDA  reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    NUMERO          reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    $end            reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    FIN             reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    BREAK           reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    LLAVEDER        reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)
    ELSE            reduce using rule 54 (selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement .)


state 173

    (55) selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 191


state 174

    (56) selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .

    INICIO          reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CLASS           reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PUBLIC          reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PRIVATE         reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PRINT           reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    IF              reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    SWITCH          reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CASE            reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    DEFAULT         reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    WHILE           reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    FOR             reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    DO              reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    RETURN          reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CONTINUE        reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    NEW             reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    DOLAR           reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    AMPERSAND       reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CONST           reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    NUMERO          reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    $end            reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    FIN             reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    BREAK           reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    LLAVEDER        reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)
    ELSE            reduce using rule 56 (selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA .)


state 175

    (58) iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression . PUNTOYCOMA additive_expression PARENDERECHA statement

    PUNTOYCOMA      shift and go to state 192


state 176

    (82) simple_expression -> additive_expression relop additive_expression relop additive_expression .
    (83) simple_expression -> additive_expression relop additive_expression relop additive_expression . relop additive_expression
    (84) simple_expression -> additive_expression relop additive_expression relop additive_expression . relop additive_expression relop additive_expression
    (95) additive_expression -> additive_expression . addop term
    (86) relop -> . MENORQ
    (87) relop -> . MAYORQ
    (88) relop -> . DIFERENTE
    (89) relop -> . LOGNEGACION
    (90) relop -> . IQUALIQUAL
    (91) relop -> . LOGOR
    (92) relop -> . LOGXOR
    (93) relop -> . LOGAND
    (94) relop -> . LOGY
    (99) addop -> . PLUS
    (100) addop -> . MINUS

    PUNTOYCOMA      reduce using rule 82 (simple_expression -> additive_expression relop additive_expression relop additive_expression .)
    PARENDERECHA    reduce using rule 82 (simple_expression -> additive_expression relop additive_expression relop additive_expression .)
    COMA            reduce using rule 82 (simple_expression -> additive_expression relop additive_expression relop additive_expression .)
    PUNTO           reduce using rule 82 (simple_expression -> additive_expression relop additive_expression relop additive_expression .)
    MENORQ          shift and go to state 72
    MAYORQ          shift and go to state 73
    DIFERENTE       shift and go to state 74
    LOGNEGACION     shift and go to state 75
    IQUALIQUAL      shift and go to state 76
    LOGOR           shift and go to state 77
    LOGXOR          shift and go to state 78
    LOGAND          shift and go to state 79
    LOGY            shift and go to state 80
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

    relop                          shift and go to state 193
    addop                          shift and go to state 71

state 177

    (63) object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR . argumento
    (64) argumento -> . PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA

    PARENIZQUIERDA  shift and go to state 195

    argumento                      shift and go to state 194

state 178

    (16) var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .

    INICIO          reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    CLASS           reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    PUBLIC          reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    PRIVATE         reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    PRINT           reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    IF              reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    SWITCH          reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    CASE            reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    DEFAULT         reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    WHILE           reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    FOR             reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    DO              reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    RETURN          reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    CONTINUE        reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    NEW             reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    DOLAR           reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    AMPERSAND       reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    CONST           reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    NUMERO          reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    $end            reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    FIN             reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)
    LLAVEDER        reduce using rule 16 (var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA .)


state 179

    (27) fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params . PARENDERECHA compount_stmt

    PARENDERECHA    shift and go to state 196


state 180

    (31) params -> param_list .
    (32) param_list -> param_list . COMA param

    PARENDERECHA    reduce using rule 31 (params -> param_list .)
    COMA            shift and go to state 197


state 181

    (33) param_list -> param .

    COMA            reduce using rule 33 (param_list -> param .)
    PARENDERECHA    reduce using rule 33 (param_list -> param .)


state 182

    (34) param_list -> empty .

    COMA            reduce using rule 34 (param_list -> empty .)
    PARENDERECHA    reduce using rule 34 (param_list -> empty .)


state 183

    (35) param -> DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 198


state 184

    (28) fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA . params PARENDERECHA compount_stmt
    (31) params -> . param_list
    (32) param_list -> . param_list COMA param
    (33) param_list -> . param
    (34) param_list -> . empty
    (35) param -> . DOLAR IDENTIFICADOR
    (114) empty -> .

    DOLAR           shift and go to state 183
    COMA            reduce using rule 114 (empty -> .)
    PARENDERECHA    reduce using rule 114 (empty -> .)

    params                         shift and go to state 199
    param_list                     shift and go to state 180
    param                          shift and go to state 181
    empty                          shift and go to state 182

state 185

    (19) var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .

    IGUAL           reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    MINUSMINUS      reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    PLUSPLUS        reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    MULTI           reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    DIVIDE          reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    MENORQ          reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    MAYORQ          reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    DIFERENTE       reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    LOGNEGACION     reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    IQUALIQUAL      reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    LOGOR           reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    LOGXOR          reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    LOGAND          reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    LOGY            reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    PLUS            reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    MINUS           reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    PUNTOYCOMA      reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    PARENDERECHA    reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    COMA            reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)
    PUNTO           reduce using rule 19 (var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2 .)


state 186

    (112) args_list -> args_list COMA expression .

    COMA            reduce using rule 112 (args_list -> args_list COMA expression .)
    PARENDERECHA    reduce using rule 112 (args_list -> args_list COMA expression .)


state 187

    (11) bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR . bloque_declaration
    (10) bloque_declaration -> . LLAVEIZQ bloque_declaration_2 LLAVEDER
    (11) bloque_declaration -> . CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration

    LLAVEIZQ        shift and go to state 106
    CLASS           shift and go to state 104

    bloque_declaration             shift and go to state 200

state 188

    (72) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression . PUNTOYCOMA
    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression . PUNTO COMILLA CADENA COMILLA PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 202
    PUNTO           shift and go to state 201


state 189

    (37) compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA . expression PARENDERECHA PUNTOYCOMA
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 203
    var_declaration2               shift and go to state 10
    simple_expression              shift and go to state 43
    additive_expression            shift and go to state 38
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 190

    (53) selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE . statement
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    expression                     shift and go to state 28
    statement                      shift and go to state 204
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    var_declaration2               shift and go to state 10
    additive_expression            shift and go to state 38
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 191

    (55) selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .

    INICIO          reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CLASS           reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PUBLIC          reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PRIVATE         reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PRINT           reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    IF              reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    SWITCH          reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CASE            reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    DEFAULT         reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    WHILE           reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    FOR             reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    DO              reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    RETURN          reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CONTINUE        reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    NEW             reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    DOLAR           reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    AMPERSAND       reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    CONST           reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    NUMERO          reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    $end            reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    FIN             reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    BREAK           reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    LLAVEDER        reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)
    ELSE            reduce using rule 55 (selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA .)


state 192

    (58) iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA . additive_expression PARENDERECHA statement
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    var_declaration2               shift and go to state 122
    additive_expression            shift and go to state 205
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 193

    (83) simple_expression -> additive_expression relop additive_expression relop additive_expression relop . additive_expression
    (84) simple_expression -> additive_expression relop additive_expression relop additive_expression relop . additive_expression relop additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    additive_expression            shift and go to state 206
    term                           shift and go to state 45
    factor                         shift and go to state 46
    var_declaration2               shift and go to state 122
    call                           shift and go to state 47

state 194

    (63) object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .

    INICIO          reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    CLASS           reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    PUBLIC          reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    PRIVATE         reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    PUNTOYCOMA      reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    PRINT           reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    LLAVEIZQ        reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    IF              reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    SWITCH          reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    CASE            reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    DEFAULT         reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    WHILE           reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    FOR             reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    DO              reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    RETURN          reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    CONTINUE        reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    NEW             reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    DOLAR           reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    AMPERSAND       reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    CONST           reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    PARENIZQUIERDA  reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    NUMERO          reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    $end            reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    FIN             reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    BREAK           reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    LLAVEDER        reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)
    ELSE            reduce using rule 63 (object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento .)


state 195

    (64) argumento -> PARENIZQUIERDA . argumento_2 PARENDERECHA PUNTOYCOMA
    (65) argumento_2 -> . DOLAR IDENTIFICADOR COMA argumento_2
    (66) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA COMA argumento_2
    (67) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA
    (68) argumento_2 -> . DOLAR IDENTIFICADOR
    (69) argumento_2 -> . NUMERO argumento_2
    (70) argumento_2 -> . NUMERO

    DOLAR           shift and go to state 208
    COMILLA         shift and go to state 209
    NUMERO          shift and go to state 210

    argumento_2                    shift and go to state 207

state 196

    (27) fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA . compount_stmt
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA

    LLAVEIZQ        shift and go to state 30

    compount_stmt                  shift and go to state 211

state 197

    (32) param_list -> param_list COMA . param
    (35) param -> . DOLAR IDENTIFICADOR

    DOLAR           shift and go to state 183

    param                          shift and go to state 212

state 198

    (35) param -> DOLAR IDENTIFICADOR .

    COMA            reduce using rule 35 (param -> DOLAR IDENTIFICADOR .)
    PARENDERECHA    reduce using rule 35 (param -> DOLAR IDENTIFICADOR .)


state 199

    (28) fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params . PARENDERECHA compount_stmt

    PARENDERECHA    shift and go to state 213


state 200

    (11) bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .

    INICIO          reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    CLASS           reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    PUBLIC          reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    PRIVATE         reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    PUNTOYCOMA      reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    PRINT           reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    LLAVEIZQ        reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    IF              reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    SWITCH          reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    CASE            reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    DEFAULT         reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    WHILE           reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    FOR             reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    DO              reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    RETURN          reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    CONTINUE        reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    NEW             reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    DOLAR           reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    AMPERSAND       reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    CONST           reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    PARENIZQUIERDA  reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    NUMERO          reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    $end            reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)
    FIN             reduce using rule 11 (bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration .)


state 201

    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO . COMILLA CADENA COMILLA PUNTOYCOMA

    COMILLA         shift and go to state 214


state 202

    (72) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .

    INICIO          reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    CLASS           reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    PUBLIC          reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    PRIVATE         reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    PRINT           reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    IF              reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    SWITCH          reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    CASE            reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    DEFAULT         reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    WHILE           reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    FOR             reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    DO              reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    RETURN          reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    CONTINUE        reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    NEW             reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    DOLAR           reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    AMPERSAND       reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    CONST           reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    NUMERO          reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    $end            reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    FIN             reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    BREAK           reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    LLAVEDER        reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)
    ELSE            reduce using rule 72 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA .)


state 203

    (37) compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression . PARENDERECHA PUNTOYCOMA

    PARENDERECHA    shift and go to state 215


state 204

    (53) selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .

    INICIO          reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    CLASS           reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    PUBLIC          reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    PRIVATE         reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    PUNTOYCOMA      reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    PRINT           reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    LLAVEIZQ        reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    IF              reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    SWITCH          reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    CASE            reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    DEFAULT         reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    WHILE           reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    FOR             reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    DO              reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    RETURN          reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    CONTINUE        reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    NEW             reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    DOLAR           reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    AMPERSAND       reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    CONST           reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    PARENIZQUIERDA  reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    NUMERO          reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    $end            reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    FIN             reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    BREAK           reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    LLAVEDER        reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)
    ELSE            reduce using rule 53 (selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement .)


state 205

    (58) iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression . PARENDERECHA statement
    (95) additive_expression -> additive_expression . addop term
    (99) addop -> . PLUS
    (100) addop -> . MINUS

    PARENDERECHA    shift and go to state 216
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

    addop                          shift and go to state 71

state 206

    (83) simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression .
    (84) simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression . relop additive_expression
    (95) additive_expression -> additive_expression . addop term
    (86) relop -> . MENORQ
    (87) relop -> . MAYORQ
    (88) relop -> . DIFERENTE
    (89) relop -> . LOGNEGACION
    (90) relop -> . IQUALIQUAL
    (91) relop -> . LOGOR
    (92) relop -> . LOGXOR
    (93) relop -> . LOGAND
    (94) relop -> . LOGY
    (99) addop -> . PLUS
    (100) addop -> . MINUS

    PUNTOYCOMA      reduce using rule 83 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    PARENDERECHA    reduce using rule 83 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    COMA            reduce using rule 83 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    PUNTO           reduce using rule 83 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    MENORQ          shift and go to state 72
    MAYORQ          shift and go to state 73
    DIFERENTE       shift and go to state 74
    LOGNEGACION     shift and go to state 75
    IQUALIQUAL      shift and go to state 76
    LOGOR           shift and go to state 77
    LOGXOR          shift and go to state 78
    LOGAND          shift and go to state 79
    LOGY            shift and go to state 80
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

    relop                          shift and go to state 217
    addop                          shift and go to state 71

state 207

    (64) argumento -> PARENIZQUIERDA argumento_2 . PARENDERECHA PUNTOYCOMA

    PARENDERECHA    shift and go to state 218


state 208

    (65) argumento_2 -> DOLAR . IDENTIFICADOR COMA argumento_2
    (68) argumento_2 -> DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 219


state 209

    (66) argumento_2 -> COMILLA . IDENTIFICADOR COMILLA COMA argumento_2
    (67) argumento_2 -> COMILLA . IDENTIFICADOR COMILLA

    IDENTIFICADOR   shift and go to state 220


state 210

    (69) argumento_2 -> NUMERO . argumento_2
    (70) argumento_2 -> NUMERO .
    (65) argumento_2 -> . DOLAR IDENTIFICADOR COMA argumento_2
    (66) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA COMA argumento_2
    (67) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA
    (68) argumento_2 -> . DOLAR IDENTIFICADOR
    (69) argumento_2 -> . NUMERO argumento_2
    (70) argumento_2 -> . NUMERO

    PARENDERECHA    reduce using rule 70 (argumento_2 -> NUMERO .)
    DOLAR           shift and go to state 208
    COMILLA         shift and go to state 209
    NUMERO          shift and go to state 210

    argumento_2                    shift and go to state 221

state 211

    (27) fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .

    INICIO          reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CLASS           reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PUBLIC          reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PRIVATE         reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PUNTOYCOMA      reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PRINT           reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    LLAVEIZQ        reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    IF              reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    SWITCH          reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CASE            reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    DEFAULT         reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    WHILE           reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    FOR             reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    DO              reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    RETURN          reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CONTINUE        reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    NEW             reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    DOLAR           reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    AMPERSAND       reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CONST           reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PARENIZQUIERDA  reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    NUMERO          reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    $end            reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    FIN             reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    LLAVEDER        reduce using rule 27 (fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)


state 212

    (32) param_list -> param_list COMA param .

    COMA            reduce using rule 32 (param_list -> param_list COMA param .)
    PARENDERECHA    reduce using rule 32 (param_list -> param_list COMA param .)


state 213

    (28) fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA . compount_stmt
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA

    LLAVEIZQ        shift and go to state 30

    compount_stmt                  shift and go to state 222

state 214

    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA . CADENA COMILLA PUNTOYCOMA
    (74) CADENA -> . IDENTIFICADOR CADENA
    (75) CADENA -> . NUMERO CADENA
    (76) CADENA -> . NUMERO
    (77) CADENA -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 108
    NUMERO          shift and go to state 109

    CADENA                         shift and go to state 223

state 215

    (37) compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 224


state 216

    (58) iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA . statement
    (42) statement -> . expression_stmt
    (43) statement -> . imprimir_pantalla
    (44) statement -> . compount_stmt
    (45) statement -> . selection_stmt
    (46) statement -> . iteration_stmt
    (47) statement -> . return_stmt
    (48) statement -> . continue_stmt
    (49) statement -> . object_stmt
    (50) expression_stmt -> . expression PUNTOYCOMA
    (51) expression_stmt -> . PUNTOYCOMA
    (71) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTOYCOMA
    (72) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA
    (73) imprimir_pantalla -> . PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA
    (36) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER
    (37) compount_stmt -> . LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA
    (52) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement
    (53) selection_stmt -> . IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement
    (54) selection_stmt -> . SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement
    (55) selection_stmt -> . CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA
    (56) selection_stmt -> . DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA
    (57) iteration_stmt -> . WHILE PARENIZQUIERDA expression PARENDERECHA statement
    (58) iteration_stmt -> . FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement
    (59) iteration_stmt -> . DO statement
    (60) return_stmt -> . RETURN PUNTOYCOMA
    (61) return_stmt -> . RETURN expression PUNTOYCOMA
    (62) continue_stmt -> . CONTINUE PUNTOYCOMA
    (63) object_stmt -> . NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento
    (78) expression -> . var_declaration2 IGUAL expression
    (79) expression -> . simple_expression
    (80) expression -> . var_declaration2 IGUAL var_declaration2 PUNTOYCOMA
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (81) simple_expression -> . additive_expression relop additive_expression
    (82) simple_expression -> . additive_expression relop additive_expression relop additive_expression
    (83) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression
    (84) simple_expression -> . additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression
    (85) simple_expression -> . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PUNTOYCOMA      shift and go to state 11
    PRINT           shift and go to state 29
    LLAVEIZQ        shift and go to state 30
    IF              shift and go to state 32
    SWITCH          shift and go to state 33
    CASE            shift and go to state 34
    DEFAULT         shift and go to state 36
    WHILE           shift and go to state 31
    FOR             shift and go to state 37
    DO              shift and go to state 39
    RETURN          shift and go to state 40
    CONTINUE        shift and go to state 41
    NEW             shift and go to state 42
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44
    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35

    var_declaration2               shift and go to state 10
    expression                     shift and go to state 28
    additive_expression            shift and go to state 38
    statement                      shift and go to state 225
    expression_stmt                shift and go to state 21
    imprimir_pantalla              shift and go to state 22
    compount_stmt                  shift and go to state 15
    selection_stmt                 shift and go to state 23
    iteration_stmt                 shift and go to state 24
    return_stmt                    shift and go to state 25
    continue_stmt                  shift and go to state 26
    object_stmt                    shift and go to state 27
    simple_expression              shift and go to state 43
    term                           shift and go to state 45
    factor                         shift and go to state 46
    call                           shift and go to state 47

state 217

    (84) simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop . additive_expression
    (95) additive_expression -> . additive_expression addop term
    (96) additive_expression -> . term
    (97) additive_expression -> . term MINUSMINUS
    (98) additive_expression -> . term PLUSPLUS
    (101) term -> . term mulop factor
    (102) term -> . factor
    (105) factor -> . PARENIZQUIERDA expression PARENDERECHA
    (106) factor -> . var_declaration2
    (107) factor -> . call
    (108) factor -> . NUMERO
    (17) var_declaration2 -> . DOLAR IDENTIFICADOR COMA var_declaration2
    (18) var_declaration2 -> . DOLAR IDENTIFICADOR
    (19) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2
    (20) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NUMERO
    (21) var_declaration2 -> . AMPERSAND IDENTIFICADOR
    (22) var_declaration2 -> . DOLAR IDENTIFICADOR IGUAL NULL
    (23) var_declaration2 -> . CONST IDENTIFICADOR IGUAL NUMERO
    (109) call -> . DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA

    PARENIZQUIERDA  shift and go to state 14
    NUMERO          shift and go to state 35
    DOLAR           shift and go to state 12
    AMPERSAND       shift and go to state 16
    CONST           shift and go to state 44

    additive_expression            shift and go to state 226
    term                           shift and go to state 45
    factor                         shift and go to state 46
    var_declaration2               shift and go to state 122
    call                           shift and go to state 47

state 218

    (64) argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 227


state 219

    (65) argumento_2 -> DOLAR IDENTIFICADOR . COMA argumento_2
    (68) argumento_2 -> DOLAR IDENTIFICADOR .

    COMA            shift and go to state 228
    PARENDERECHA    reduce using rule 68 (argumento_2 -> DOLAR IDENTIFICADOR .)


state 220

    (66) argumento_2 -> COMILLA IDENTIFICADOR . COMILLA COMA argumento_2
    (67) argumento_2 -> COMILLA IDENTIFICADOR . COMILLA

    COMILLA         shift and go to state 229


state 221

    (69) argumento_2 -> NUMERO argumento_2 .

    PARENDERECHA    reduce using rule 69 (argumento_2 -> NUMERO argumento_2 .)


state 222

    (28) fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .

    INICIO          reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CLASS           reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PUBLIC          reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PRIVATE         reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PUNTOYCOMA      reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PRINT           reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    LLAVEIZQ        reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    IF              reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    SWITCH          reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CASE            reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    DEFAULT         reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    WHILE           reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    FOR             reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    DO              reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    RETURN          reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CONTINUE        reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    NEW             reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    DOLAR           reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    AMPERSAND       reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    CONST           reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    PARENIZQUIERDA  reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    NUMERO          reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    $end            reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    FIN             reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)
    LLAVEDER        reduce using rule 28 (fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt .)


state 223

    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA . COMILLA PUNTOYCOMA

    COMILLA         shift and go to state 230


state 224

    (37) compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .

    INICIO          reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    CLASS           reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    PUBLIC          reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    PRIVATE         reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    PRINT           reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    IF              reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    SWITCH          reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    CASE            reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    DEFAULT         reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    WHILE           reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    FOR             reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    DO              reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    RETURN          reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    CONTINUE        reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    NEW             reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    DOLAR           reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    AMPERSAND       reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    CONST           reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    NUMERO          reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    $end            reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    FIN             reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    BREAK           reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    LLAVEDER        reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)
    ELSE            reduce using rule 37 (compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA .)


state 225

    (58) iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .

    INICIO          reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    CLASS           reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    PUBLIC          reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    PRIVATE         reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    PUNTOYCOMA      reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    PRINT           reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    LLAVEIZQ        reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    IF              reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    SWITCH          reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    CASE            reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    DEFAULT         reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    WHILE           reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    FOR             reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    DO              reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    RETURN          reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    CONTINUE        reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    NEW             reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    DOLAR           reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    AMPERSAND       reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    CONST           reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    PARENIZQUIERDA  reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    NUMERO          reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    $end            reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    FIN             reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    BREAK           reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    LLAVEDER        reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)
    ELSE            reduce using rule 58 (iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement .)


state 226

    (84) simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression .
    (95) additive_expression -> additive_expression . addop term
    (99) addop -> . PLUS
    (100) addop -> . MINUS

    PUNTOYCOMA      reduce using rule 84 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    PARENDERECHA    reduce using rule 84 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    COMA            reduce using rule 84 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    PUNTO           reduce using rule 84 (simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

    addop                          shift and go to state 71

state 227

    (64) argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .

    INICIO          reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    CLASS           reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    PUBLIC          reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    PRIVATE         reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    PRINT           reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    IF              reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    SWITCH          reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    CASE            reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    DEFAULT         reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    WHILE           reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    FOR             reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    DO              reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    RETURN          reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    CONTINUE        reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    NEW             reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    DOLAR           reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    AMPERSAND       reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    CONST           reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    NUMERO          reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    $end            reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    FIN             reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    BREAK           reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    LLAVEDER        reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)
    ELSE            reduce using rule 64 (argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA .)


state 228

    (65) argumento_2 -> DOLAR IDENTIFICADOR COMA . argumento_2
    (65) argumento_2 -> . DOLAR IDENTIFICADOR COMA argumento_2
    (66) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA COMA argumento_2
    (67) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA
    (68) argumento_2 -> . DOLAR IDENTIFICADOR
    (69) argumento_2 -> . NUMERO argumento_2
    (70) argumento_2 -> . NUMERO

    DOLAR           shift and go to state 208
    COMILLA         shift and go to state 209
    NUMERO          shift and go to state 210

    argumento_2                    shift and go to state 231

state 229

    (66) argumento_2 -> COMILLA IDENTIFICADOR COMILLA . COMA argumento_2
    (67) argumento_2 -> COMILLA IDENTIFICADOR COMILLA .

    COMA            shift and go to state 232
    PARENDERECHA    reduce using rule 67 (argumento_2 -> COMILLA IDENTIFICADOR COMILLA .)


state 230

    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 233


state 231

    (65) argumento_2 -> DOLAR IDENTIFICADOR COMA argumento_2 .

    PARENDERECHA    reduce using rule 65 (argumento_2 -> DOLAR IDENTIFICADOR COMA argumento_2 .)


state 232

    (66) argumento_2 -> COMILLA IDENTIFICADOR COMILLA COMA . argumento_2
    (65) argumento_2 -> . DOLAR IDENTIFICADOR COMA argumento_2
    (66) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA COMA argumento_2
    (67) argumento_2 -> . COMILLA IDENTIFICADOR COMILLA
    (68) argumento_2 -> . DOLAR IDENTIFICADOR
    (69) argumento_2 -> . NUMERO argumento_2
    (70) argumento_2 -> . NUMERO

    DOLAR           shift and go to state 208
    COMILLA         shift and go to state 209
    NUMERO          shift and go to state 210

    argumento_2                    shift and go to state 234

state 233

    (73) imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .

    INICIO          reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    CLASS           reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    PUBLIC          reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    PRIVATE         reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    PRINT           reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    LLAVEIZQ        reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    IF              reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    SWITCH          reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    CASE            reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    DEFAULT         reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    WHILE           reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    FOR             reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    DO              reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    RETURN          reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    CONTINUE        reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    NEW             reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    DOLAR           reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    AMPERSAND       reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    CONST           reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    PARENIZQUIERDA  reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    NUMERO          reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    $end            reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    FIN             reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    BREAK           reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    LLAVEDER        reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)
    ELSE            reduce using rule 73 (imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA .)


state 234

    (66) argumento_2 -> COMILLA IDENTIFICADOR COMILLA COMA argumento_2 .

    PARENDERECHA    reduce using rule 66 (argumento_2 -> COMILLA IDENTIFICADOR COMILLA COMA argumento_2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMA in state 55 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 97 resolved as shift
WARNING: shift/reduce conflict for COMA in state 133 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 146 resolved as shift
WARNING: shift/reduce conflict for COMA in state 151 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 151 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 171 resolved as shift
