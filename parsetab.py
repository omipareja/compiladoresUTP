
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND BREAK CASE CLASS COMA COMILLA CONST CONTINUE CORCHDER CORCHIZQ DEFAULT DIFERENTE DIVIDE DO DOLAR DOSPUNTOS ELSE EXTENDS FIN FOR FUNCTION IDENTIFICADOR IF IGUAL INICIO IQUALIQUAL LLAVEDER LLAVEIZQ LOGAND LOGNEGACION LOGOR LOGXOR LOGY MAYORQ MENORQ MINUS MINUSMINUS MULTI NEW NULL NUMERO PARENDERECHA PARENIZQUIERDA PLUS PLUSPLUS PRINT PRIVATE PUBLIC PUNTO PUNTOYCOMA RETURN STATIC SWITCH WHILEprogram : declaration_listdeclaration_list : declaration_list  declarationdeclaration_list : declarationdeclaration : var_declaration\n\t\t\t\t  | operaction_declaration\n\t\t\t\t  | fun_declaration\n\t\t\t\t  | header_declaration\n\t\t\t\t  | class_declaration\n\n\t\t\t\t  class_declaration : CLASS IDENTIFICADOR bloque_declarationbloque_declaration : LLAVEIZQ bloque_declaration_2 LLAVEDER\n\t\t\t\t\t\t\t| CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR  bloque_declaration\n\t bloque_declaration_2 : fun_declaration bloque_declaration_2\n\t\t\t\t\t\t\t\t| fun_declaration\n\t header_declaration : INICIO program FINvar_declaration : type_specifier var_declaration2 PUNTOYCOMAvar_declaration :  type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMAvar_declaration2 : DOLAR IDENTIFICADOR COMA var_declaration2\n                                    | DOLAR IDENTIFICADOR\n                                    | DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2\n                                    | DOLAR IDENTIFICADOR IGUAL NUMERO\n\t\t\t\t\t\t\t\t\t| AMPERSAND IDENTIFICADOR\n\t\t\t\t\t\t\t\t\t| DOLAR IDENTIFICADOR IGUAL NULL\n\t\t\t\t\t\t\t\t\t| CONST IDENTIFICADOR IGUAL NUMERO\n        type_specifier : PUBLICtype_specifier : PRIVATEoperaction_declaration : statement fun_declaration : type_specifier type_function FUNCTION  IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA  compount_stmt  fun_declaration : type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA  compount_stmt  type_function : STATICtype_function : emptyparams : param_listparam_list : param_list COMA paramparam_list : paramparam_list : emptyparam : DOLAR IDENTIFICADORcompount_stmt : LLAVEIZQ local_declarations statement_list LLAVEDER\n\t\t| LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA\n\tlocal_declarations : local_declarations var_declarationlocal_declarations : emptystatement_list : statement_list statementstatement_list : emptystatement : expression_stmt\n\t\t\t\t| imprimir_pantalla\n\t\t\t\t| compount_stmt\n\t\t\t\t| selection_stmt\n\t\t\t\t| iteration_stmt\n\t\t\t\t| return_stmt\n\t\t\t\t| continue_stmt\n\t\t\t\t| object_stmt\n\texpression_stmt : expression PUNTOYCOMAexpression_stmt : PUNTOYCOMAselection_stmt : IF PARENIZQUIERDA expression PARENDERECHA statementselection_stmt : IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statementselection_stmt : SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statementselection_stmt : CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA selection_stmt : DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMAiteration_stmt : WHILE PARENIZQUIERDA expression PARENDERECHA statementiteration_stmt : FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statementiteration_stmt : DO statementreturn_stmt : RETURN PUNTOYCOMAreturn_stmt : RETURN expression PUNTOYCOMAcontinue_stmt : CONTINUE PUNTOYCOMA  object_stmt : NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento  argumento : PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA  argumento_2 : DOLAR IDENTIFICADOR COMA argumento_2\n\t\t\t\t\t | COMILLA IDENTIFICADOR COMILLA COMA argumento_2\n\t\t\t\t\t | COMILLA IDENTIFICADOR COMILLA\n\t\t\t\t\t | DOLAR IDENTIFICADOR\n\t\t\t\t\t | NUMERO argumento_2\n\t\t\t\t\t | NUMERO\n\n\t imprimir_pantalla : PRINT COMILLA CADENA COMILLA PUNTOYCOMA\n\t\t\t\t\t\t\t| PRINT COMILLA CADENA COMILLA PUNTO expression  PUNTOYCOMA\n\t\t\t\t\t\t\t|  PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA  PUNTOYCOMA\n\t CADENA : IDENTIFICADOR CADENA\n\t\t\t\t| NUMERO CADENA\n\t\t\t\t| NUMERO\n\t\t\t\t| IDENTIFICADOR\n\texpression : var_declaration2 IGUAL expressionexpression : simple_expressionexpression : var_declaration2 IGUAL  var_declaration2 PUNTOYCOMAsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t| additive_expression relop additive_expression relop additive_expression\n\t\t\t\t\t\t| additive_expression relop additive_expression relop additive_expression relop additive_expression\n\t\t\t\t\t\t| additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression\n\tsimple_expression : additive_expressionrelop : MENORQ\n\t\t\t|  MAYORQ\n\t\t\t| DIFERENTE\n\t\t\t| LOGNEGACION\n\t\t\t| IQUALIQUAL\n\t\t\t| LOGOR\n\t\t\t| LOGXOR\n\t\t\t| LOGAND\n\t\t\t| LOGY\n\tadditive_expression : additive_expression addop term\n\n        additive_expression : termadditive_expression : term MINUSMINUSadditive_expression : term PLUSPLUSaddop : PLUS\n\t\t\t| MINUS\n\tterm : term mulop factorterm : factormulop : \tMULTI\n\t\t\t\t| DIVIDE\n\tfactor : PARENIZQUIERDA expression PARENDERECHAfactor : var_declaration2factor : callfactor : NUMEROcall : DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHAargs : args_list\n\t\t\t| empty\n\targs_list : args_list COMA expressionargs_list : expressionempty :'
    
_lr_action_items = {'INICIO':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,48,60,83,84,86,94,103,105,124,146,165,167,170,171,172,174,178,191,194,200,202,204,211,222,224,225,227,233,],[17,17,-3,-4,-5,-6,-7,-8,-51,-26,-44,17,-42,-43,-45,-46,-47,-48,-49,-2,-50,-59,-60,-62,-15,-14,-9,-61,-36,-10,-71,-57,-52,-54,-56,-16,-55,-63,-11,-72,-53,-27,-28,-37,-58,-64,-73,]),'CLASS':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,48,59,60,83,84,86,94,103,105,124,146,165,167,170,171,172,174,178,187,191,194,200,202,204,211,222,224,225,227,233,],[18,18,-3,-4,-5,-6,-7,-8,-51,-26,-44,18,-42,-43,-45,-46,-47,-48,-49,-2,104,-50,-59,-60,-62,-15,-14,-9,-61,-36,-10,-71,-57,-52,-54,-56,-16,104,-55,-63,-11,-72,-53,-27,-28,-37,-58,-64,-73,]),'PUBLIC':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,48,60,62,63,83,84,86,94,103,105,106,111,124,141,146,165,167,170,171,172,174,178,191,194,200,202,204,211,222,224,225,227,233,],[19,19,-3,-4,-5,-6,-7,-8,-51,-26,-44,19,-42,-43,-45,-46,-47,-48,-49,-114,-2,-50,19,-39,-59,-60,-62,-15,-14,-9,19,-38,-61,19,-36,-10,-71,-57,-52,-54,-56,-16,-55,-63,-11,-72,-53,-27,-28,-37,-58,-64,-73,]),'PRIVATE':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,48,60,62,63,83,84,86,94,103,105,106,111,124,141,146,165,167,170,171,172,174,178,191,194,200,202,204,211,222,224,225,227,233,],[20,20,-3,-4,-5,-6,-7,-8,-51,-26,-44,20,-42,-43,-45,-46,-47,-48,-49,-114,-2,-50,20,-39,-59,-60,-62,-15,-14,-9,20,-38,-61,20,-36,-10,-71,-57,-52,-54,-56,-16,-55,-63,-11,-72,-53,-27,-28,-37,-58,-64,-73,]),'PUNTOYCOMA':([0,2,3,4,5,6,7,8,10,11,13,15,17,21,22,23,24,25,26,27,28,30,35,38,39,40,41,43,45,46,47,48,49,55,57,60,62,63,68,83,84,85,86,89,90,94,95,97,98,102,103,105,110,111,112,118,120,121,122,123,124,127,131,132,133,134,143,146,147,148,149,150,151,153,157,158,162,165,167,170,171,172,173,174,175,176,178,185,188,190,191,194,200,202,204,206,211,215,216,218,222,224,225,226,227,230,233,],[11,11,-3,-4,-5,-6,-7,-8,-106,-51,-26,-44,11,-42,-43,-45,-46,-47,-48,-49,60,-114,-108,-85,11,84,86,-79,-96,-102,-107,-2,94,-18,-21,-50,-114,-39,11,-59,-60,124,-62,-97,-98,-15,-18,131,-78,-105,-14,-9,11,-38,-41,11,154,-81,-106,-95,-61,-101,-80,-17,-20,-22,167,-36,-40,11,11,11,-18,174,-23,178,-109,-10,-71,-57,-52,-54,191,-56,192,-82,-16,-19,202,11,-55,-63,-11,-72,-53,-83,-27,224,11,227,-28,-37,-58,-84,-64,233,-73,]),'PRINT':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[29,29,-3,-4,-5,-6,-7,-8,-51,-26,-44,29,-42,-43,-45,-46,-47,-48,-49,-114,29,-2,-50,-114,-39,29,-59,-60,-62,-15,-14,-9,29,-38,-41,29,-61,-36,-40,29,29,29,-10,-71,-57,-52,-54,-56,-16,29,-55,-63,-11,-72,-53,-27,29,-28,-37,-58,-64,-73,]),'LLAVEIZQ':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,59,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,187,190,191,194,196,200,202,204,211,213,216,222,224,225,227,233,],[30,30,-3,-4,-5,-6,-7,-8,-51,-26,-44,30,-42,-43,-45,-46,-47,-48,-49,-114,30,-2,106,-50,-114,-39,30,-59,-60,-62,-15,-14,-9,30,-38,-41,30,-61,-36,-40,30,30,30,-10,-71,-57,-52,-54,-56,-16,106,30,-55,-63,30,-11,-72,-53,-27,30,30,-28,-37,-58,-64,-73,]),'IF':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[32,32,-3,-4,-5,-6,-7,-8,-51,-26,-44,32,-42,-43,-45,-46,-47,-48,-49,-114,32,-2,-50,-114,-39,32,-59,-60,-62,-15,-14,-9,32,-38,-41,32,-61,-36,-40,32,32,32,-10,-71,-57,-52,-54,-56,-16,32,-55,-63,-11,-72,-53,-27,32,-28,-37,-58,-64,-73,]),'SWITCH':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[33,33,-3,-4,-5,-6,-7,-8,-51,-26,-44,33,-42,-43,-45,-46,-47,-48,-49,-114,33,-2,-50,-114,-39,33,-59,-60,-62,-15,-14,-9,33,-38,-41,33,-61,-36,-40,33,33,33,-10,-71,-57,-52,-54,-56,-16,33,-55,-63,-11,-72,-53,-27,33,-28,-37,-58,-64,-73,]),'CASE':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[34,34,-3,-4,-5,-6,-7,-8,-51,-26,-44,34,-42,-43,-45,-46,-47,-48,-49,-114,34,-2,-50,-114,-39,34,-59,-60,-62,-15,-14,-9,34,-38,-41,34,-61,-36,-40,34,34,34,-10,-71,-57,-52,-54,-56,-16,34,-55,-63,-11,-72,-53,-27,34,-28,-37,-58,-64,-73,]),'DEFAULT':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[36,36,-3,-4,-5,-6,-7,-8,-51,-26,-44,36,-42,-43,-45,-46,-47,-48,-49,-114,36,-2,-50,-114,-39,36,-59,-60,-62,-15,-14,-9,36,-38,-41,36,-61,-36,-40,36,36,36,-10,-71,-57,-52,-54,-56,-16,36,-55,-63,-11,-72,-53,-27,36,-28,-37,-58,-64,-73,]),'WHILE':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[31,31,-3,-4,-5,-6,-7,-8,-51,-26,-44,31,-42,-43,-45,-46,-47,-48,-49,-114,31,-2,-50,-114,-39,31,-59,-60,-62,-15,-14,-9,31,-38,-41,31,-61,169,-40,31,31,31,-10,-71,-57,-52,-54,-56,-16,31,-55,-63,-11,-72,-53,-27,31,-28,-37,-58,-64,-73,]),'FOR':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[37,37,-3,-4,-5,-6,-7,-8,-51,-26,-44,37,-42,-43,-45,-46,-47,-48,-49,-114,37,-2,-50,-114,-39,37,-59,-60,-62,-15,-14,-9,37,-38,-41,37,-61,-36,-40,37,37,37,-10,-71,-57,-52,-54,-56,-16,37,-55,-63,-11,-72,-53,-27,37,-28,-37,-58,-64,-73,]),'DO':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[39,39,-3,-4,-5,-6,-7,-8,-51,-26,-44,39,-42,-43,-45,-46,-47,-48,-49,-114,39,-2,-50,-114,-39,39,-59,-60,-62,-15,-14,-9,39,-38,-41,39,-61,-36,-40,39,39,39,-10,-71,-57,-52,-54,-56,-16,39,-55,-63,-11,-72,-53,-27,39,-28,-37,-58,-64,-73,]),'RETURN':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[40,40,-3,-4,-5,-6,-7,-8,-51,-26,-44,40,-42,-43,-45,-46,-47,-48,-49,-114,40,-2,-50,-114,-39,40,-59,-60,-62,-15,-14,-9,40,-38,-41,40,-61,-36,-40,40,40,40,-10,-71,-57,-52,-54,-56,-16,40,-55,-63,-11,-72,-53,-27,40,-28,-37,-58,-64,-73,]),'CONTINUE':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[41,41,-3,-4,-5,-6,-7,-8,-51,-26,-44,41,-42,-43,-45,-46,-47,-48,-49,-114,41,-2,-50,-114,-39,41,-59,-60,-62,-15,-14,-9,41,-38,-41,41,-61,-36,-40,41,41,41,-10,-71,-57,-52,-54,-56,-16,41,-55,-63,-11,-72,-53,-27,41,-28,-37,-58,-64,-73,]),'NEW':([0,2,3,4,5,6,7,8,11,13,15,17,21,22,23,24,25,26,27,30,39,48,60,62,63,68,83,84,86,94,103,105,110,111,112,118,124,146,147,148,149,150,165,167,170,171,172,174,178,190,191,194,200,202,204,211,216,222,224,225,227,233,],[42,42,-3,-4,-5,-6,-7,-8,-51,-26,-44,42,-42,-43,-45,-46,-47,-48,-49,-114,42,-2,-50,-114,-39,42,-59,-60,-62,-15,-14,-9,42,-38,-41,42,-61,-36,-40,42,42,42,-10,-71,-57,-52,-54,-56,-16,42,-55,-63,-11,-72,-53,-27,42,-28,-37,-58,-64,-73,]),'DOLAR':([0,2,3,4,5,6,7,8,9,11,13,14,15,17,19,20,21,22,23,24,25,26,27,30,39,40,42,48,54,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,91,92,93,94,99,101,103,105,110,111,112,113,118,124,146,147,148,149,150,154,155,159,161,163,165,167,168,170,171,172,174,178,184,189,190,191,192,193,194,195,197,200,202,204,210,211,216,217,222,224,225,227,228,232,233,],[12,12,-3,-4,-5,-6,-7,-8,50,-51,-26,12,-44,12,-24,-25,-42,-43,-45,-46,-47,-48,-49,-114,12,12,87,-2,12,-50,-114,-39,12,12,117,12,117,12,12,-86,-87,-88,-89,-90,-91,-92,-93,-94,-99,-100,-59,-60,-62,12,-103,-104,-15,117,12,-14,-9,12,-38,-41,50,12,-61,-36,-40,12,12,12,12,12,183,117,12,-10,-71,12,-57,-52,-54,-56,-16,183,12,12,-55,12,12,-63,208,183,-11,-72,-53,208,-27,12,12,-28,-37,-58,-64,208,208,-73,]),'AMPERSAND':([0,2,3,4,5,6,7,8,9,11,13,14,15,17,19,20,21,22,23,24,25,26,27,30,39,40,48,54,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,91,92,93,94,96,99,101,103,105,110,111,112,113,118,124,146,147,148,149,150,154,155,161,163,165,167,168,170,171,172,174,178,189,190,191,192,193,194,200,202,204,211,216,217,222,224,225,227,233,],[16,16,-3,-4,-5,-6,-7,-8,16,-51,-26,16,-44,16,-24,-25,-42,-43,-45,-46,-47,-48,-49,-114,16,16,-2,16,-50,-114,-39,16,16,16,16,16,16,16,-86,-87,-88,-89,-90,-91,-92,-93,-94,-99,-100,-59,-60,-62,16,-103,-104,-15,130,16,16,-14,-9,16,-38,-41,16,16,-61,-36,-40,16,16,16,16,16,16,16,-10,-71,16,-57,-52,-54,-56,-16,16,16,-55,16,16,-63,-11,-72,-53,-27,16,16,-28,-37,-58,-64,-73,]),'CONST':([0,2,3,4,5,6,7,8,9,11,13,14,15,17,19,20,21,22,23,24,25,26,27,30,39,40,48,54,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,91,92,93,94,99,101,103,105,110,111,112,113,118,124,146,147,148,149,150,154,155,161,163,165,167,168,170,171,172,174,178,189,190,191,192,193,194,200,202,204,211,216,217,222,224,225,227,233,],[44,44,-3,-4,-5,-6,-7,-8,44,-51,-26,44,-44,44,-24,-25,-42,-43,-45,-46,-47,-48,-49,-114,44,44,-2,44,-50,-114,-39,44,44,44,44,44,44,44,-86,-87,-88,-89,-90,-91,-92,-93,-94,-99,-100,-59,-60,-62,44,-103,-104,-15,44,44,-14,-9,44,-38,-41,44,44,-61,-36,-40,44,44,44,44,44,44,44,-10,-71,44,-57,-52,-54,-56,-16,44,44,-55,44,44,-63,-11,-72,-53,-27,44,44,-28,-37,-58,-64,-73,]),'PARENIZQUIERDA':([0,2,3,4,5,6,7,8,11,13,14,15,17,21,22,23,24,25,26,27,30,31,32,33,37,39,40,48,54,55,60,62,63,64,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,91,92,93,94,101,103,105,110,111,112,118,124,129,146,147,148,149,150,154,155,160,163,165,167,168,169,170,171,172,174,177,178,189,190,191,192,193,194,200,202,204,211,216,217,222,224,225,227,233,],[14,14,-3,-4,-5,-6,-7,-8,-51,-26,14,-44,14,-42,-43,-45,-46,-47,-48,-49,-114,64,65,66,69,14,14,-2,14,101,-50,-114,-39,14,14,14,14,14,-86,-87,-88,-89,-90,-91,-92,-93,-94,-99,-100,-59,-60,-62,14,-103,-104,-15,14,-14,-9,14,-38,-41,14,-61,159,-36,-40,14,14,14,14,14,184,14,-10,-71,14,189,-57,-52,-54,-56,195,-16,14,14,-55,14,14,-63,-11,-72,-53,-27,14,14,-28,-37,-58,-64,-73,]),'NUMERO':([0,2,3,4,5,6,7,8,11,13,14,15,17,21,22,23,24,25,26,27,30,34,39,40,48,54,60,61,62,63,64,65,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,91,92,93,94,100,101,103,105,108,109,110,111,112,118,124,126,146,147,148,149,150,154,155,163,165,167,168,170,171,172,174,178,189,190,191,192,193,194,195,200,202,204,210,211,214,216,217,222,224,225,227,228,232,233,],[35,35,-3,-4,-5,-6,-7,-8,-51,-26,35,-44,35,-42,-43,-45,-46,-47,-48,-49,-114,67,35,35,-2,35,-50,109,-114,-39,35,35,35,35,35,-86,-87,-88,-89,-90,-91,-92,-93,-94,-99,-100,-59,-60,-62,35,-103,-104,-15,133,35,-14,-9,109,109,35,-38,-41,35,-61,157,-36,-40,35,35,35,35,35,35,-10,-71,35,-57,-52,-54,-56,-16,35,35,-55,35,35,-63,210,-11,-72,-53,210,-27,109,35,35,-28,-37,-58,-64,210,210,-73,]),'$end':([1,2,3,4,5,6,7,8,11,13,15,21,22,23,24,25,26,27,48,60,83,84,86,94,103,105,124,146,165,167,170,171,172,174,178,191,194,200,202,204,211,222,224,225,227,233,],[0,-1,-3,-4,-5,-6,-7,-8,-51,-26,-44,-42,-43,-45,-46,-47,-48,-49,-2,-50,-59,-60,-62,-15,-14,-9,-61,-36,-10,-71,-57,-52,-54,-56,-16,-55,-63,-11,-72,-53,-27,-28,-37,-58,-64,-73,]),'FIN':([2,3,4,5,6,7,8,11,13,15,21,22,23,24,25,26,27,48,58,60,83,84,86,94,103,105,124,146,165,167,170,171,172,174,178,191,194,200,202,204,211,222,224,225,227,233,],[-1,-3,-4,-5,-6,-7,-8,-51,-26,-44,-42,-43,-45,-46,-47,-48,-49,-2,103,-50,-59,-60,-62,-15,-14,-9,-61,-36,-10,-71,-57,-52,-54,-56,-16,-55,-63,-11,-72,-53,-27,-28,-37,-58,-64,-73,]),'STATIC':([9,19,20,142,],[52,-24,-25,52,]),'FUNCTION':([9,19,20,51,52,53,142,],[-114,-24,-25,96,-29,-30,-114,]),'IGUAL':([10,55,57,88,95,97,125,132,133,134,151,157,185,],[54,100,-21,126,100,54,156,-17,-20,-22,100,-23,-19,]),'MINUSMINUS':([10,35,45,46,47,55,57,97,102,122,127,132,133,134,151,157,162,185,],[-106,-108,89,-102,-107,-18,-21,-106,-105,-106,-101,-17,-20,-22,-18,-23,-109,-19,]),'PLUSPLUS':([10,35,45,46,47,55,57,97,102,122,127,132,133,134,151,157,162,185,],[-106,-108,90,-102,-107,-18,-21,-106,-105,-106,-101,-17,-20,-22,-18,-23,-109,-19,]),'MULTI':([10,35,45,46,47,55,57,97,102,122,123,127,132,133,134,151,157,162,185,],[-106,-108,92,-102,-107,-18,-21,-106,-105,-106,92,-101,-17,-20,-22,-18,-23,-109,-19,]),'DIVIDE':([10,35,45,46,47,55,57,97,102,122,123,127,132,133,134,151,157,162,185,],[-106,-108,93,-102,-107,-18,-21,-106,-105,-106,93,-101,-17,-20,-22,-18,-23,-109,-19,]),'MENORQ':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,72,-96,-102,-107,-18,-21,-97,-98,-106,-105,72,-106,-95,-101,-17,-20,-22,-18,-23,-109,72,-19,72,]),'MAYORQ':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,73,-96,-102,-107,-18,-21,-97,-98,-106,-105,73,-106,-95,-101,-17,-20,-22,-18,-23,-109,73,-19,73,]),'DIFERENTE':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,74,-96,-102,-107,-18,-21,-97,-98,-106,-105,74,-106,-95,-101,-17,-20,-22,-18,-23,-109,74,-19,74,]),'LOGNEGACION':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,75,-96,-102,-107,-18,-21,-97,-98,-106,-105,75,-106,-95,-101,-17,-20,-22,-18,-23,-109,75,-19,75,]),'IQUALIQUAL':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,76,-96,-102,-107,-18,-21,-97,-98,-106,-105,76,-106,-95,-101,-17,-20,-22,-18,-23,-109,76,-19,76,]),'LOGOR':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,77,-96,-102,-107,-18,-21,-97,-98,-106,-105,77,-106,-95,-101,-17,-20,-22,-18,-23,-109,77,-19,77,]),'LOGXOR':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,78,-96,-102,-107,-18,-21,-97,-98,-106,-105,78,-106,-95,-101,-17,-20,-22,-18,-23,-109,78,-19,78,]),'LOGAND':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,79,-96,-102,-107,-18,-21,-97,-98,-106,-105,79,-106,-95,-101,-17,-20,-22,-18,-23,-109,79,-19,79,]),'LOGY':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,206,],[-106,-108,80,-96,-102,-107,-18,-21,-97,-98,-106,-105,80,-106,-95,-101,-17,-20,-22,-18,-23,-109,80,-19,80,]),'PLUS':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,205,206,226,],[-106,-108,81,-96,-102,-107,-18,-21,-97,-98,-106,-105,81,-106,-95,-101,-17,-20,-22,-18,-23,-109,81,-19,81,81,81,]),'MINUS':([10,35,38,45,46,47,55,57,89,90,97,102,121,122,123,127,132,133,134,151,157,162,176,185,205,206,226,],[-106,-108,82,-96,-102,-107,-18,-21,-97,-98,-106,-105,82,-106,-95,-101,-17,-20,-22,-18,-23,-109,82,-19,82,82,82,]),'PARENDERECHA':([10,35,38,43,45,46,47,55,56,57,89,90,97,98,101,102,114,115,116,121,122,123,127,131,132,133,134,135,136,137,138,151,157,159,162,176,179,180,181,182,184,185,186,198,199,203,205,206,207,210,212,219,221,226,229,231,234,],[-106,-108,-85,-79,-96,-102,-107,-18,102,-21,-97,-98,-106,-78,-114,-105,148,149,150,-81,-106,-95,-101,-80,-17,-20,-22,162,-110,-111,-113,-18,-23,-114,-109,-82,196,-31,-33,-34,-114,-19,-112,-35,213,215,216,-83,218,-70,-32,-68,-69,-84,-67,-65,-66,]),'COMA':([10,35,38,43,45,46,47,55,57,89,90,95,97,98,102,121,122,123,127,131,132,133,134,136,138,151,157,159,162,176,180,181,182,184,185,186,198,206,212,219,226,229,],[-106,-108,-85,-79,-96,-102,-107,99,-21,-97,-98,99,-106,-78,-105,-81,-106,-95,-101,-80,-17,161,-22,163,-113,99,-23,-114,-109,-82,197,-33,-34,-114,-19,-112,-35,-83,-32,228,-84,232,]),'PUNTO':([10,35,38,43,45,46,47,55,57,89,90,97,98,102,121,122,123,127,131,132,133,134,143,151,157,162,176,185,188,206,226,],[-106,-108,-85,-79,-96,-102,-107,-18,-21,-97,-98,-106,-78,-105,-81,-106,-95,-101,-80,-17,-20,-22,168,-18,-23,-109,-82,-19,201,-83,-84,]),'BREAK':([11,15,21,22,23,24,25,26,27,60,83,84,86,119,124,146,152,167,170,171,172,174,191,194,202,204,224,225,227,233,],[-51,-44,-42,-43,-45,-46,-47,-48,-49,-50,-59,-60,-62,153,-61,-36,173,-71,-57,-52,-54,-56,-55,-63,-72,-53,-37,-58,-64,-73,]),'LLAVEDER':([11,15,21,22,23,24,25,26,27,30,60,62,63,83,84,86,94,110,111,112,124,140,141,146,147,166,167,170,171,172,174,178,191,194,202,204,211,222,224,225,227,233,],[-51,-44,-42,-43,-45,-46,-47,-48,-49,-114,-50,-114,-39,-59,-60,-62,-15,146,-38,-41,-61,165,-13,-36,-40,-12,-71,-57,-52,-54,-56,-16,-55,-63,-72,-53,-27,-28,-37,-58,-64,-73,]),'ELSE':([11,15,21,22,23,24,25,26,27,60,83,84,86,124,146,167,170,171,172,174,191,194,202,204,224,225,227,233,],[-51,-44,-42,-43,-45,-46,-47,-48,-49,-50,-59,-60,-62,-61,-36,-71,-57,190,-54,-56,-55,-63,-72,-53,-37,-58,-64,-73,]),'IDENTIFICADOR':([12,16,18,44,50,61,87,96,104,108,109,117,130,156,164,183,208,209,214,],[55,57,59,88,95,108,125,129,139,108,108,151,160,177,187,198,219,220,108,]),'COMILLA':([29,107,108,109,144,145,195,201,210,220,223,228,232,],[61,143,-77,-76,-74,-75,209,214,209,229,230,209,209,]),'DOSPUNTOS':([36,67,],[68,118,]),'CORCHIZQ':([95,],[128,]),'NULL':([100,],[134,]),'CORCHDER':([128,],[158,]),'EXTENDS':([139,],[164,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,17,],[1,58,]),'declaration_list':([0,17,],[2,2,]),'declaration':([0,2,17,],[3,48,3,]),'var_declaration':([0,2,17,62,],[4,4,4,111,]),'operaction_declaration':([0,2,17,],[5,5,5,]),'fun_declaration':([0,2,17,106,141,],[6,6,6,141,141,]),'header_declaration':([0,2,17,],[7,7,7,]),'class_declaration':([0,2,17,],[8,8,8,]),'type_specifier':([0,2,17,62,106,141,],[9,9,9,113,142,142,]),'var_declaration2':([0,2,9,14,17,39,40,54,64,65,66,68,69,70,71,91,99,101,110,113,118,148,149,150,154,155,161,163,168,189,190,192,193,216,217,],[10,10,49,10,10,10,10,97,10,10,116,10,120,122,122,122,132,10,10,49,10,10,10,10,10,122,185,10,10,10,10,122,122,10,122,]),'statement':([0,2,17,39,68,110,118,148,149,150,190,216,],[13,13,13,83,119,147,152,170,171,172,204,225,]),'compount_stmt':([0,2,17,39,68,110,118,148,149,150,190,196,213,216,],[15,15,15,15,15,15,15,15,15,15,15,211,222,15,]),'expression_stmt':([0,2,17,39,68,110,118,148,149,150,190,216,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'imprimir_pantalla':([0,2,17,39,68,110,118,148,149,150,190,216,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'selection_stmt':([0,2,17,39,68,110,118,148,149,150,190,216,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'iteration_stmt':([0,2,17,39,68,110,118,148,149,150,190,216,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'return_stmt':([0,2,17,39,68,110,118,148,149,150,190,216,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'continue_stmt':([0,2,17,39,68,110,118,148,149,150,190,216,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'object_stmt':([0,2,17,39,68,110,118,148,149,150,190,216,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'expression':([0,2,14,17,39,40,54,64,65,68,101,110,118,148,149,150,154,163,168,189,190,216,],[28,28,56,28,28,85,98,114,115,28,138,28,28,28,28,28,175,186,188,203,28,28,]),'additive_expression':([0,2,14,17,39,40,54,64,65,68,70,101,110,118,148,149,150,154,155,163,168,189,190,192,193,216,217,],[38,38,38,38,38,38,38,38,38,38,121,38,38,38,38,38,38,38,176,38,38,38,38,205,206,38,226,]),'simple_expression':([0,2,14,17,39,40,54,64,65,68,101,110,118,148,149,150,154,163,168,189,190,216,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'term':([0,2,14,17,39,40,54,64,65,68,70,71,101,110,118,148,149,150,154,155,163,168,189,190,192,193,216,217,],[45,45,45,45,45,45,45,45,45,45,45,123,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'factor':([0,2,14,17,39,40,54,64,65,68,70,71,91,101,110,118,148,149,150,154,155,163,168,189,190,192,193,216,217,],[46,46,46,46,46,46,46,46,46,46,46,46,127,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'call':([0,2,14,17,39,40,54,64,65,68,70,71,91,101,110,118,148,149,150,154,155,163,168,189,190,192,193,216,217,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'type_function':([9,142,],[51,51,]),'empty':([9,30,62,101,142,159,184,],[53,63,112,137,53,182,182,]),'local_declarations':([30,],[62,]),'relop':([38,121,176,206,],[70,155,193,217,]),'addop':([38,121,176,205,206,226,],[71,71,71,71,71,71,]),'mulop':([45,123,],[91,91,]),'bloque_declaration':([59,187,],[105,200,]),'CADENA':([61,108,109,214,],[107,144,145,223,]),'statement_list':([62,],[110,]),'args':([101,],[135,]),'args_list':([101,],[136,]),'bloque_declaration_2':([106,141,],[140,166,]),'params':([159,184,],[179,199,]),'param_list':([159,184,],[180,180,]),'param':([159,184,197,],[181,181,212,]),'argumento':([177,],[194,]),'argumento_2':([195,210,228,232,],[207,221,231,234,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','compilador_parser1.py',12),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','compilador_parser1.py',18),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','compilador_parser1.py',22),
  ('declaration -> var_declaration','declaration',1,'p_declaration','compilador_parser1.py',26),
  ('declaration -> operaction_declaration','declaration',1,'p_declaration','compilador_parser1.py',27),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','compilador_parser1.py',28),
  ('declaration -> header_declaration','declaration',1,'p_declaration','compilador_parser1.py',29),
  ('declaration -> class_declaration','declaration',1,'p_declaration','compilador_parser1.py',30),
  ('class_declaration -> CLASS IDENTIFICADOR bloque_declaration','class_declaration',3,'p_class_declaration','compilador_parser1.py',36),
  ('bloque_declaration -> LLAVEIZQ bloque_declaration_2 LLAVEDER','bloque_declaration',3,'p_bloque_declaration','compilador_parser1.py',40),
  ('bloque_declaration -> CLASS IDENTIFICADOR EXTENDS IDENTIFICADOR bloque_declaration','bloque_declaration',5,'p_bloque_declaration','compilador_parser1.py',41),
  ('bloque_declaration_2 -> fun_declaration bloque_declaration_2','bloque_declaration_2',2,'p_bloque_declaration_2','compilador_parser1.py',46),
  ('bloque_declaration_2 -> fun_declaration','bloque_declaration_2',1,'p_bloque_declaration_2','compilador_parser1.py',47),
  ('header_declaration -> INICIO program FIN','header_declaration',3,'p_header_declaration_1','compilador_parser1.py',53),
  ('var_declaration -> type_specifier var_declaration2 PUNTOYCOMA','var_declaration',3,'p_var_declaration_1','compilador_parser1.py',58),
  ('var_declaration -> type_specifier DOLAR IDENTIFICADOR CORCHIZQ CORCHDER PUNTOYCOMA','var_declaration',6,'p_var_declaration_2','compilador_parser1.py',62),
  ('var_declaration2 -> DOLAR IDENTIFICADOR COMA var_declaration2','var_declaration2',4,'p_var_declaration_3','compilador_parser1.py',66),
  ('var_declaration2 -> DOLAR IDENTIFICADOR','var_declaration2',2,'p_var_declaration_3','compilador_parser1.py',67),
  ('var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO COMA var_declaration2','var_declaration2',6,'p_var_declaration_3','compilador_parser1.py',68),
  ('var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NUMERO','var_declaration2',4,'p_var_declaration_3','compilador_parser1.py',69),
  ('var_declaration2 -> AMPERSAND IDENTIFICADOR','var_declaration2',2,'p_var_declaration_3','compilador_parser1.py',70),
  ('var_declaration2 -> DOLAR IDENTIFICADOR IGUAL NULL','var_declaration2',4,'p_var_declaration_3','compilador_parser1.py',71),
  ('var_declaration2 -> CONST IDENTIFICADOR IGUAL NUMERO','var_declaration2',4,'p_var_declaration_3','compilador_parser1.py',72),
  ('type_specifier -> PUBLIC','type_specifier',1,'p_type_specifier_1','compilador_parser1.py',79),
  ('type_specifier -> PRIVATE','type_specifier',1,'p_type_specifier_2','compilador_parser1.py',83),
  ('operaction_declaration -> statement','operaction_declaration',1,'p_operation_declaration','compilador_parser1.py',88),
  ('fun_declaration -> type_specifier type_function FUNCTION IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt','fun_declaration',8,'p_fun_declaration_1','compilador_parser1.py',93),
  ('fun_declaration -> type_specifier type_function FUNCTION AMPERSAND IDENTIFICADOR PARENIZQUIERDA params PARENDERECHA compount_stmt','fun_declaration',9,'p_fun_declaration_2','compilador_parser1.py',97),
  ('type_function -> STATIC','type_function',1,'p_type_function_1','compilador_parser1.py',101),
  ('type_function -> empty','type_function',1,'p_type_function_2','compilador_parser1.py',105),
  ('params -> param_list','params',1,'p_params_1','compilador_parser1.py',109),
  ('param_list -> param_list COMA param','param_list',3,'p_param_list_1','compilador_parser1.py',113),
  ('param_list -> param','param_list',1,'p_param_list_2','compilador_parser1.py',117),
  ('param_list -> empty','param_list',1,'p_param_list_3','compilador_parser1.py',121),
  ('param -> DOLAR IDENTIFICADOR','param',2,'p_param_1','compilador_parser1.py',125),
  ('compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER','compount_stmt',4,'p_compount_stmt','compilador_parser1.py',129),
  ('compount_stmt -> LLAVEIZQ local_declarations statement_list LLAVEDER WHILE PARENIZQUIERDA expression PARENDERECHA PUNTOYCOMA','compount_stmt',9,'p_compount_stmt','compilador_parser1.py',130),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations_1','compilador_parser1.py',138),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations_2','compilador_parser1.py',142),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','compilador_parser1.py',146),
  ('statement_list -> empty','statement_list',1,'p_statement_list_2','compilador_parser1.py',150),
  ('statement -> expression_stmt','statement',1,'p_statement','compilador_parser1.py',154),
  ('statement -> imprimir_pantalla','statement',1,'p_statement','compilador_parser1.py',155),
  ('statement -> compount_stmt','statement',1,'p_statement','compilador_parser1.py',156),
  ('statement -> selection_stmt','statement',1,'p_statement','compilador_parser1.py',157),
  ('statement -> iteration_stmt','statement',1,'p_statement','compilador_parser1.py',158),
  ('statement -> return_stmt','statement',1,'p_statement','compilador_parser1.py',159),
  ('statement -> continue_stmt','statement',1,'p_statement','compilador_parser1.py',160),
  ('statement -> object_stmt','statement',1,'p_statement','compilador_parser1.py',161),
  ('expression_stmt -> expression PUNTOYCOMA','expression_stmt',2,'p_expression_stmt_1','compilador_parser1.py',166),
  ('expression_stmt -> PUNTOYCOMA','expression_stmt',1,'p_expression_stmt_2','compilador_parser1.py',170),
  ('selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement','selection_stmt',5,'p_selection_stmt_1','compilador_parser1.py',174),
  ('selection_stmt -> IF PARENIZQUIERDA expression PARENDERECHA statement ELSE statement','selection_stmt',7,'p_selection_stmt_2','compilador_parser1.py',178),
  ('selection_stmt -> SWITCH PARENIZQUIERDA var_declaration2 PARENDERECHA statement','selection_stmt',5,'p_selection_stmt_3','compilador_parser1.py',182),
  ('selection_stmt -> CASE NUMERO DOSPUNTOS statement BREAK PUNTOYCOMA','selection_stmt',6,'p_selection_stmt_4','compilador_parser1.py',186),
  ('selection_stmt -> DEFAULT DOSPUNTOS statement BREAK PUNTOYCOMA','selection_stmt',5,'p_selection_stmt_5','compilador_parser1.py',190),
  ('iteration_stmt -> WHILE PARENIZQUIERDA expression PARENDERECHA statement','iteration_stmt',5,'p_iteration_stmt_1','compilador_parser1.py',194),
  ('iteration_stmt -> FOR PARENIZQUIERDA var_declaration2 PUNTOYCOMA expression PUNTOYCOMA additive_expression PARENDERECHA statement','iteration_stmt',9,'p_iteration_stmt_2','compilador_parser1.py',198),
  ('iteration_stmt -> DO statement','iteration_stmt',2,'p_iteration_stmt_3','compilador_parser1.py',202),
  ('return_stmt -> RETURN PUNTOYCOMA','return_stmt',2,'p_return_stmt_1','compilador_parser1.py',206),
  ('return_stmt -> RETURN expression PUNTOYCOMA','return_stmt',3,'p_return_stmt_2','compilador_parser1.py',210),
  ('continue_stmt -> CONTINUE PUNTOYCOMA','continue_stmt',2,'p_continue_stmt','compilador_parser1.py',214),
  ('object_stmt -> NEW DOLAR IDENTIFICADOR IGUAL IDENTIFICADOR argumento','object_stmt',6,'p_object_stmt','compilador_parser1.py',218),
  ('argumento -> PARENIZQUIERDA argumento_2 PARENDERECHA PUNTOYCOMA','argumento',4,'p_argumento','compilador_parser1.py',222),
  ('argumento_2 -> DOLAR IDENTIFICADOR COMA argumento_2','argumento_2',4,'p_argumento_2','compilador_parser1.py',226),
  ('argumento_2 -> COMILLA IDENTIFICADOR COMILLA COMA argumento_2','argumento_2',5,'p_argumento_2','compilador_parser1.py',227),
  ('argumento_2 -> COMILLA IDENTIFICADOR COMILLA','argumento_2',3,'p_argumento_2','compilador_parser1.py',228),
  ('argumento_2 -> DOLAR IDENTIFICADOR','argumento_2',2,'p_argumento_2','compilador_parser1.py',229),
  ('argumento_2 -> NUMERO argumento_2','argumento_2',2,'p_argumento_2','compilador_parser1.py',230),
  ('argumento_2 -> NUMERO','argumento_2',1,'p_argumento_2','compilador_parser1.py',231),
  ('imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTOYCOMA','imprimir_pantalla',5,'p_imprimir_pantalla','compilador_parser1.py',237),
  ('imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTOYCOMA','imprimir_pantalla',7,'p_imprimir_pantalla','compilador_parser1.py',238),
  ('imprimir_pantalla -> PRINT COMILLA CADENA COMILLA PUNTO expression PUNTO COMILLA CADENA COMILLA PUNTOYCOMA','imprimir_pantalla',11,'p_imprimir_pantalla','compilador_parser1.py',239),
  ('CADENA -> IDENTIFICADOR CADENA','CADENA',2,'p_cadenas','compilador_parser1.py',244),
  ('CADENA -> NUMERO CADENA','CADENA',2,'p_cadenas','compilador_parser1.py',245),
  ('CADENA -> NUMERO','CADENA',1,'p_cadenas','compilador_parser1.py',246),
  ('CADENA -> IDENTIFICADOR','CADENA',1,'p_cadenas','compilador_parser1.py',247),
  ('expression -> var_declaration2 IGUAL expression','expression',3,'p_expression_1','compilador_parser1.py',252),
  ('expression -> simple_expression','expression',1,'p_expression_2','compilador_parser1.py',257),
  ('expression -> var_declaration2 IGUAL var_declaration2 PUNTOYCOMA','expression',4,'p_expression_3','compilador_parser1.py',261),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','compilador_parser1.py',267),
  ('simple_expression -> additive_expression relop additive_expression relop additive_expression','simple_expression',5,'p_simple_expression_1','compilador_parser1.py',268),
  ('simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression','simple_expression',7,'p_simple_expression_1','compilador_parser1.py',269),
  ('simple_expression -> additive_expression relop additive_expression relop additive_expression relop additive_expression relop additive_expression','simple_expression',9,'p_simple_expression_1','compilador_parser1.py',270),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','compilador_parser1.py',275),
  ('relop -> MENORQ','relop',1,'p_relop','compilador_parser1.py',279),
  ('relop -> MAYORQ','relop',1,'p_relop','compilador_parser1.py',280),
  ('relop -> DIFERENTE','relop',1,'p_relop','compilador_parser1.py',281),
  ('relop -> LOGNEGACION','relop',1,'p_relop','compilador_parser1.py',282),
  ('relop -> IQUALIQUAL','relop',1,'p_relop','compilador_parser1.py',283),
  ('relop -> LOGOR','relop',1,'p_relop','compilador_parser1.py',284),
  ('relop -> LOGXOR','relop',1,'p_relop','compilador_parser1.py',285),
  ('relop -> LOGAND','relop',1,'p_relop','compilador_parser1.py',286),
  ('relop -> LOGY','relop',1,'p_relop','compilador_parser1.py',287),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','compilador_parser1.py',292),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','compilador_parser1.py',298),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression_3','compilador_parser1.py',302),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression_4','compilador_parser1.py',306),
  ('addop -> PLUS','addop',1,'p_addop','compilador_parser1.py',310),
  ('addop -> MINUS','addop',1,'p_addop','compilador_parser1.py',311),
  ('term -> term mulop factor','term',3,'p_term_1','compilador_parser1.py',316),
  ('term -> factor','term',1,'p_term_2','compilador_parser1.py',320),
  ('mulop -> MULTI','mulop',1,'p_mulop','compilador_parser1.py',324),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','compilador_parser1.py',325),
  ('factor -> PARENIZQUIERDA expression PARENDERECHA','factor',3,'p_factor_1','compilador_parser1.py',330),
  ('factor -> var_declaration2','factor',1,'p_factor_2','compilador_parser1.py',334),
  ('factor -> call','factor',1,'p_factor_3','compilador_parser1.py',338),
  ('factor -> NUMERO','factor',1,'p_factor_4','compilador_parser1.py',342),
  ('call -> DOLAR IDENTIFICADOR PARENIZQUIERDA args PARENDERECHA','call',5,'p_call','compilador_parser1.py',346),
  ('args -> args_list','args',1,'p_args','compilador_parser1.py',350),
  ('args -> empty','args',1,'p_args','compilador_parser1.py',351),
  ('args_list -> args_list COMA expression','args_list',3,'p_args_list_1','compilador_parser1.py',356),
  ('args_list -> expression','args_list',1,'p_args_list_2','compilador_parser1.py',360),
  ('empty -> <empty>','empty',0,'p_empty','compilador_parser1.py',364),
]
